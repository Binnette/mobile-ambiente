/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/script.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/script.ts":
/*!***********************!*\
  !*** ./src/script.ts ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var beruf = ["Abt/Äbtissin", "Altenpfleger/in", "Apotheker/in", "Architekt/in", "Artist/in", "Arzt/Ärztin", "Astronaut/in", "Augenoptiker/in", "Autohändler/in", "Bäcker/in", "Bademeister/in", "Barkeeper/in", "Bauer/Farmer", "Berführer/in", "Bergführer/in", "Bergmann/frau", "Betonbauer/in", "Bibliothekar/in", "Bierbrauer/in", "Binnenschiffer/in", "Biologe/Biologin", "Bootsbauer/in", "Boxer/in", "Briefträger/in", "Buchhändler/in", "Bundeskanzler/in", "Call-Center-Agent", "Chemiker/in", "Chorsänger/in", "Comedy-Autor", "Creative Director", "Dachdecker/in", "Damenschneider/in", "Designer/in", "Dirigent/in", "Diskjockey", "Dolmetscher/in", "Drogist/in", "Eheberater/in", "Eisverkäufer/in", "Elektriker/in", "Elektroniker/in", "Energieberater/in", "Ergotherapeuth/in", "Ernährungsberater/in", "Erzieher/in", "Event-Manager/in", "Fahrlehrer", "Fahrradkurier/in", "Fahrradmonteur/in", "Feuerwehrmann", "Fischer/in", "Fleischer", "Fleischer/in", "Fliesenleger/in", "Florist/in", "Fluglotse/Fluglotsin", "Fotograf/in", "Friedhofsgärtner/in", "Friseur/in", "Fussball-Schiedsrichter/in", "Gärtner/in", "Gebäudereiniger/in", "Geburtshelfer/in", "Gefängniswärter/in", "Geigenbauer/in", "Glaser/in", "Gleisbauer/in", "Goldschmied/in", "Großhandelskaufmann", "Gymnasiallehrer", "Hausfrau/Hausmann", "Headhunter", "Hörakustiker/in", "Hotelier", "Human Resources Manager/in", "Hundetrainer/in", "Imker/in", "Immobilienmakler/in", "Industriekletterer", "Informatiker/in", "Ingenieur", "Innenarchitekt/in", "Jäger", "Jazz-Musiker", "Journalist/in", "Jurist/in", "Kameramann/frau", "Kanalarbeiter/in", "Kapitän/in", "Klavierbauer/in", "Klempner/in", "Koch/Köchin", "Komponist/in", "Kosmetiker/in", "Krankenschwester/Krankenpfleger", "Kriminalkommissar/in", "Kulturstaatsminister/in", "Landwir/in", "Landwirt/in", "Logopäde/Logopädin", "Lokomotivführer/in", "Maler/in", "Marktforscher/in", "Maschinenbauer/in", "Masseur/in", "Maurer/in", "Mechatroniker/in", "Meteorologe/Meteorologin", "Möbelpacker/packerin", "Model", "Molkereiarbeiter", "Musiklehrer", "Ozeanograph", "Partyserviceunternehmer", "Pathologe", "Pfarrer", "Pförtner/in", "Physiker/in", "Pilot/in", "Polizist/in", "Programmierer/in", "Puppenspieler/in", "Raumausstatter/in", "Rechtsanwalt", "Rechtsanwalt/in", "Redenschreiber/in", "Regisseur/in", "Reiseleiter/in", "Rettungsschwimmer/in", "Richter/in", "Sanitäter/in", "Schädlingsbekämpfer/in", "Schäfer/in", "Schauspieler/in", "Schiffbauer/in", "Schornsteinfeger/in", "Schreiner/in", "Schuhmacher/in", "Sekretär/in", "Soldat/in", "Souffleur", "Spargelstecher", "Spargelstecher/in", "Sportlehrer/in", "Steinmetz/in", "Steuerfachangestellter/e", "Stuntman", "Stuntman/frau", "Surflehrer/in", "Tankwart", "Taxifahrer/in", "Tierarzt", "Tierpfleger", "Tischler", "Tischler/in", "Türsteher", "Türsteher/in", "Uhrmeister", "Uhrmeister/in", "Umweltschützer/in", "Unternehmensberater/in", "Veranstaltungskaufmann/frau", "Verkäufer/in", "Versteiger", "Versteigerer/in", "Verteidigungsminister", "Verteidigungsminister/in", "Waffenhändler/in", "Wahlforscher", "Wahlforscher/in", "Wasserbauer/in", "Weihnachtsmann", "Winzer", "Winzer/in", "Zahnarzt", "Zahnarzt/in", "Zeitungszusteller", "Zeitungszusteller/in", "Zerspanungsmechaniker/in", "Zimmerer", "Zimmerer/in", "Zoohändler/in", "Zugbegleiter", "Zugbegleiter/in"];
var hobby = ["Angeln", "Büchernarr", "Hobbykoch", "Pflanzen züchten (Pilze, Kakteen ...)", "Philosoph / Meditieren", "Sammler (Briefmarken, Teddybären, Münzen ...)", "Sport (Fussball, Autorennen, Snowboard, Skateboard, Paragleiding ...)", "Tiere züchten (Spinnen, Regenwürmer ...)", "Wandern (Wandern, Bergsteigen ...)", "Wassersport (Segeln, Wasserskifahren, Kajak, Kanu, Kitesurfen, Surfen, Schwimmen, Turmspringen, Synchronschwimmen, Wasserball, Wildwasser, Tauchen)", "Darstellung des Mittelalters, der römischen Geschichte...", "Musizieren (Klavier, Flöte, Cello, Gitarre, Kofferradio)", "Fotografieren", "Malen und Zeichnen (Aktzeichnen, Landschaftsbilder, Ölbilder, Kohlezeichnung)", "Kleingarten (Rasen mähen, Säen, Ernten, Pflücken, Baumschneiden, Umgraben, Giessen", "Tanzen (Standardtanzen, Latein, Salsa, Ballett, Hip Hop, Breakdance, Jazztanz, Formationstanz)", "Wintersport (Skifahren, Eiskunstlaufen, Bobfahren, Skispringen, Curling)", "Kneipensport (Billard, Pool, Dart, Tischfussball", "Kegeln, Bowling"];
var tick = ["Kratzt sich ständig am Kopf", "Ständiges Nasejucken", "Zucken der Mundwinkel", "Rucken des Kopfes", "Reiben im Schritt", "Hochziehen der Augenbrauen", "Zwinkern mit einem Auge", "Ständiges Räuspern", "Schuhtick", "Kleptomanie (Zwang etwas stehlen zu müssen)", "Waschzwang", "Pyromanie (Zwang, ein Feuer zu legen)"];
var gefuehl = ["abgespannt", "ablehnend", "achtsam", "aggressiv", "akzeptierend", "alarmiert", "albern", "ambivalent", "angeekelt", "angeregt", "angespannt", "angewidert", "ängstlich", "angstschlotternd", "antriebslos", "ärgerlich", "argwöhnisch", "arrogant", "aufgebracht", "aufgedreht", "aufgeregt", "aufgewühlt", "ausgeglichen", "ausgelassen", "ausgelaugt", "beängstigt", "bedrängt", "bedrückt", "beeindruckt", "befangen", "beflügelt", "befreit", "befriedigt", "begeistert", "begierig", "behaglich", "beklommen", "bekümmert", "belastet", "belebt", "beleidigt", "belustigt", "berauscht", "bereit", "bereuend", "beruhigt", "berührt", "beschämt", "beschwingt", "beseelt", "besorgt", "bestürzt", "betroffen", "betrübt", "beunruhigt", "bewegt", "bewundernd", "bezaubert", "bitter", "blockiert", "brummig", "dankbar", "depressiv", "deprimiert", "distanziert", "dumpf", "durcheinander", "ehrfürchtig", "eifersüchtig", "eifrig", "einsam", "ekelerfüllt", "empfindlich", "empört", "energiegeladen", "energisch", "engagiert", "enthusiastisch", "entlastet", "entmutigt", "entrüstet", "entschieden", "entschlossen", "entsetzt", "entspannt", "enttäuscht", "entzückt", "erfreut", "erfrischt", "erfüllt", "ergriffen", "erheitert", "erleichtert", "erleuchtet", "ermüdet", "ermuntert", "ermutigt", "ernüchtert", "erregt", "erschlagen", "erschöpft", "erschrocken", "erstaunt", "erwartungsvoll", "fasziniert", "feindselig", "feinsinnig", "frei", "freuen", "friedlich", "froh", "fröhlich", "frustriert", "fügsam", "furchtsam", "fürsorglich", "gebannt", "geborgen", "geduldig", "gefasst", "gefesselt", "gehässig", "gehemmt", "geladen", "gelangweilt", "gelassen", "gelöst", "gemütlich", "gequält", "gereizt", "gerührt", "gerzeizt", "geschützt", "gespannt", "gestört", "gleichgültig", "glücklich", "glückselig", "gütig", "hassend", "hasserfüllt", "heiter", "hellwach", "herzlich", "hilflos", "hingerissen", "hocherfreut", "hoffnungsvoll", "inspiriert", "intellektuell", "interessiert", "irritiert", "jämmerlich", "kalt", "klar", "kraftvoll", "kribbelig", "lebendig", "lebhaft", "leer", "leicht", "liebevoll", "locker", "lüstern", "lustig", "lustlos", "lustvoll", "melancholisch", "missmutig", "misstrauisch", "motiviert", "müde", "munter", "mürrisch", "mutig", "mutlos", "nachdenklich", "neidisch", "nervös", "neugierig", "niedergeschlagen", "offen", "ohnmächtig", "optimistisch", "panisch", "pedantisch", "peinlich", "perplex", "pessimistisch", "ratlos", "respektvoll", "ruhelos", "ruhig", "satt", "sauer", "scheu", "schläfrig", "schlapp", "schockiert", "schwermütig", "schwunglos", "schwungvoll", "selbstsicher", "selig", "sensibel", "sicher", "skeptisch", "sorgenfrei", "sorgenvoll", "sorglos", "still", "stolz", "strapaziert", "streitlustig", "stressfrei", "tapfer", "tatkräftig", "teilnahmslos", "tollkühn", "träge", "traurig", "überdrüssig", "überfordert", "überglücklich", "überlastet", "übermütig", "überrascht", "überschäumend", "überschwänglich", "überwältigt", "überzeugt", "unbehaglich", "unbekümmert", "unbeschwert", "unbeteiligt", "unerschütterlich", "ungeduldig", "ungehalten", "ungemütlich", "unglücklich", "unklar", "unnahbar", "unruhig", "unschlüssig", "unsicher", "unter Druck", "unwohl", "unzufrieden", "verängstigt", "verärgert", "verbittert", "verblüfft", "vergnügt", "verlegen", "verletzbar", "verletzt", "verliebt", "verloren", "verrückt", "verschlafen", "verschlossen", "verschreckt", "verspannt", "verspielt", "verstimmt", "verstört", "vertrauend", "vertrauensvoll", "verunsichert", "verwirrt", "verwundert", "verzagt", "verzaubert", "verzückt", "verzweifelt", "voller Vorfreude", "vorwurfsvoll", "wach", "warmherzig", "weinerlich", "widerwillig", "wissbegierig", "wohl", "wolllüstig", "wütend", "zappelig", "zärtlich", "zerknirscht", "zermürbt", "zerrissen", "zittrig", "zögerlich", "zornig", "zufrieden", "zugeneigt", "zugewandt", "zutraulich", "zuversichtlich", "zweifelnd", "zynisch"];
var gefuehlAngenehm = ["achtsam", "akzeptierend", "angeregt", "aufgedreht", "aufgeregt", "ausgeglichen", "ausgelassen", "beeindruckt", "beflügelt", "befreit", "befriedigt", "begeistert", "begierig", "behaglich", "belebt", "belustigt", "berauscht", "bereit", "beruhigt", "berührt", "beschwingt", "beseelt", "bewegt", "bewundernd", "bezaubert", "dankbar", "eifrig", "energiegeladen", "energisch", "engagiert", "enthusiastisch", "entlastet", "entschlossen", "entspannt", "entzückt", "erfreut", "erfrischt", "erfüllt", "ergriffen", "erheitert", "erleichtert", "erleuchtet", "ermuntert", "ermutigt", "erregt", "erstaunt", "erwartungsvoll", "fasziniert", "feinsinnig", "frei", "freuen", "friedlich", "froh", "fröhlich", "gebannt", "geborgen", "geduldig", "gefasst", "gefesselt", "gelassen", "gemütlich", "gerührt", "geschützt", "gespannt", "glücklich", "glückselig", "gütig", "heiter", "hellwach", "herzlich", "hingerissen", "hocherfreut", "hoffnungsvoll", "inspiriert", "interessiert", "klar", "kraftvoll", "lebendig", "lebhaft", "leicht", "liebevoll", "locker", "lustig", "lustvoll", "motiviert", "munter", "mutig", "neugierig", "offen", "optimistisch", "respektvoll", "ruhig", "satt", "schwungvoll", "selbstsicher", "selig", "sensibel", "sicher", "sorgenfrei", "sorglos", "still", "stolz", "stressfrei", "tapfer", "tatkräftig", "überglücklich", "übermütig", "überrascht", "überschäumend", "überschwänglich", "überwältigt", "unbekümmert", "unbeschwert", "unerschütterlich", "verblüfft", "vergnügt", "verliebt", "verspielt", "vertrauend", "vertrauensvoll", "verwundert", "verzaubert", "verzückt", "voller Vorfreude", "wach", "warmherzig", "wissbegierig", "wohl", "zärtlich", "zufrieden", "zugeneigt", "zugewandt", "zutraulich", "zuversichtlich"];
var koerperteil = ["Achsel", "Arm", "Auge", "Augenlid", "Backe/Wange", "Bauch", "Bein", "Brust", "Busen", "Daumen", "Ellbogen/Ellenbogen", "Ferse", "Finger", "Fuss", "Gaumen", "Gesäss", "Hals", "Hand", "Haupt", "Hüfte", "Kinn", "Knie", "Kopf", "Leber", "Lippe", "Luftröhre", "Lunge", "Mund", "Nase", "Niere", "Oberarm", "Oberschenkel", "Ohr", "Rücken", "Schulter", "Stirn", "Unterarm", "Unterschenkel", "Wade", "Zahn", "Zehe", "Zunge"];
var tier = ["Aal", "Adler", "Affe", "Afrikanischer Wildhund", "Albatros", "Alligator", "Ameise", "Ameisenbär", "Bär", "Beo", "Biber", "Biene", "Bison", "Blutegel", "Boa", "Braunbär", "Chamäleon", "Clownfisch", "Dachs", "Delfin", "Dinosaurier", "Dodo", "Echse", "Eichhörnchen", "Eidechse", "Eisbär", "Elche", "Elefant", "Ente", "Erdferkel", "Erdmännchen", "Esel", "Eule", "Faultier", "Feldhase", "Feldmaus", "Fisch", "Flamingo", "Fledermaus", "Fliege", "Fliegender Fisch", "Flughund", "Flusspferd", "Frettchen", "Frosch", "Fuchs", "Gans", "Gazelle", "Geier", "Gepart", "Giraffe", "Goldfisch", "Gorilla", "Gottesanbeterin", "Grashüpfer", "Graupapagei", "Gürteltier", "Hahn", "Hai", "Hamster", "Hase", "Hausmaus", "Hausrind", "Hermelin", "Hirsch", "Hornisse", "Huhn", "Hummer", "Hund", "Husky", "Hyäne", "Igel", "Igelfisch", "Japanische Riesenkrabbe", "Käfer", "Kamel", "Känguru", "Kaninchen", "Karpfen", "Katze", "Koala", "Kojote", "Kondor", "Krähe", "Krake", "Kranich", "Krebs", "Krokodil", "Kröte", "Küchenschabe", "Kuh", "Lachener Hans", "Lama", "Laubfrosch", "Laus", "Leguan", "Lemming", "Leopard", "Löwe", "Luchs", "Mammut", "Marienkäfer", "Maultier", "Maulwurf", "Maus", "Meerschwein", "Meise", "Merinoschaf", "Milan", "Milbe", "Molch", "Mungo", "Murmeltier", "Nacktmull", "Nashorn", "Nilpferd", "Oktopusse", "Opossum", "Orang-Utan", "Otter", "Panda", "Panther", "Papagei", "Pavian", "Pelikan", "Pfau", "Pferd", "Pinguin", "Piranha", "Präriehund", "Qualle", "Rabe", "Ratte", "Raupe", "Regenwurm", "Reh", "Reiher", "Rentier", "Robbe", "Roche", "Säbelzahntiger", "Salamander", "Schabe", "Schaf", "Schakale", "Schildkröte", "Schimpanse", "Schlange", "Schmetterling", "Schnabelbarsch", "Schnabeltier", "Schnecke", "Schneeeule", "Schwamm", "Schwan", "Schwein", "Schwertwal/Orca", "Seehund", "Seelöwe", "Seepferdchen", "Seestern", "Seeteufel", "Sibirischer Tiger", "Siebenschläfer", "Skorpion", "Spatz", "Specht", "Spinne", "Sri-Lanka-Elefant", "Stachelschwein", "Steinbock", "Stier", "Stinktier", "Storch", "Strauss", "Streifenhörnchen", "Tapir", "Taube", "Tausendfüssler", "Termiten", "Tiger", "Tintenfisch", "Totenkopfäffchen", "Uhu", "Vogel", "Vogelspinne", "Wal", "Walross", "Wanzen", "Warane", "Warzenschwein", "Waschbär", "Weinbergschnecke", "Weissstorch", "Wellensittich", "Widder", "Wiesel", "Wildschwein", "Wolf", "Wurm", "Wüstenmaus", "Wüstenrennmaus", "Zebra", "Zecke", "Ziege", "Zitteraal"];
var fabelwesen = ["Bigfoot", "Dämon", "Drache", "Eierlegende Wollmilchsau", "Einhorn", "Elfe", "Fee", "Flaschengeist", "Gespenst", "Gnom", "Godzilla", "Heinzelmännchen", "Hexe", "Kobold", "Meerjungfrau", "Mumie", "Ork", "Osterhase", "Pegasus", "Phönix", "Poltergeist", "Riese", "Sandmann", "Schlumpf", "Sphinx", "Sirene", "Titan", "Troll", "Vampir", "Weihnachtsmann", "Werwolf", "Yeti", "Zahnfee", "Zauberer", "Zombie", "Zwerg"];
var phobie = ["Aviophopie (Flugangst)", "Anuptaphobie (Angst alleinstehend zu bleiben)", "Klaustrophobie (Angst vor engen Räumen)", "Agoraphobie (Angst vor freien grossen Plätzen)", "Arachnophobie (Angst vor Spinnen)", "Herpetophobie (Angst vor Kriechtieren)", "Hippopotomonstrosesquippedaliophobie (Angst vor langen Wörtern ;-) (eigentlich: Sesquipedalophobie)", "Caligynephobie (Angst vor schönen Frauen)", "Genophobie (Angst vor Liebe/Nähe)", "Dentophobie (Angst vor dem Zahnarzt)", "Chaetophobie (Angst vor Haaren)", "Mysophobie (Angst vor Unsauberkeit/Bakterien/Krankheiten)", "Gephyrophobie (Brücken zu überqueren)", "Erythrophobie (Angst vor dem Erröten)", "Dysmorphophobie (Angst vor der Hässlichkeit des eigenen Gesichts oder Körpers)", "Akrophobie (Höhenangst oder Höhenschwindel)", "Keraunophobie (Angst vor Donner)", "Elektrophobie (Angst vor Elektrogeräten)", "Nyktophobie (Angst vor der Dunkelheit oder Nacht)", "Astraphobie (Angst vor Blitzen)", "Phobophobie (Angst eine Phobie zu erleiden)"];
var ort = ["Messestand", "Muckibude/Fitnessstudio", "Nagelstudio", "Schlachterei", "Schule", "Sonnenstudio", "Steuerberaterkanzlei", "Supermarkt", "Waschsalon", "Werbeagentur", "Würstchenbude", "Zahnarzt", "Zoofachgeschäft", "Zweithaarstudio", "Argentinien", "Australien", "Belgien", "Deutschland", "Frankreich", "Italien", "Japan", "Mexico", "Niederlande", "Österreich", "Russland", "Schweiz", "Spanien", "USA", "Berg, Berggipfel", "Gebirge", "Gletscher", "Wald", "See (Stausee, Baggersee)", "Steppe", "Strand", "Sumpf", "Wiese", "Wüste", "Höhle", "Park", "im/am Fluss", "unter Wasser (Meer, Fluss), Tiefsee", "Regenwald", "Dschungel", "Hochgebirge", "Oase", "Bergwiese", "Watt", "einsame Insel", "Moor", "Savanne", "Wasserfall", "im Irrgarten", "Bibliothek", "Einwohnermeldeamt", "Kino", "Konzertsaal", "Theater", "Praxis", "Standesamt", "KFZ-Zulassungsstelle", "Museum", "Arbeitszimmer", "Badezimmer", "Besenkammer", "Hobbyraum", "Kinderzimmer", "Schlafzimmer", "Wohnzimmer", "Küche", "Garage", "begehbarer Schrank", "Abstellraum", "Musikzimmer", "Gästezimmer", "Speisekammer", "Keller", "Dachboden", "Ankleidezimmer", "Kaminzimmer", "Balkon", "Gartenhaus", "WG Küche", "Speisezimmer", "Haushaltsraum", "Mond, Planeten", "Himmel", "Hölle", "Paradies", "Raumschiff", "Raumstation", "Spukschloss", "im menschlichem Körper", "fliegender Teppich", "Zeitmaschine", "Mikrokosmos", "Olymp", "Atom(modell) und Molekül(modell)", "Saloon", "Gesindezimmer", "Höhle von Urmenschen", "römischer/griechischer ... Marktplatz", "Ritterburg", "Atlantis", "Limes", "Turm von Babel", "Folterkammer", "Pyramide (z.B. in Grabkammer)", "vor dem Stadttor", "Schützengraben", "Trümmergrundstück", "Schlachtfeld", "Bunker", "im Sarkophag", "Schiff/U-Boot (drauf oder drinnen)", "Kreuzfahrtschiff", "Fischkutter", "Flugzeug", "Auto, LKW, Bus", "Wohnwagen, Wohnmobil", "Motorrad", "Zug", "Seilbahn", "Kutsche", "Fahrstuhl", "Zeppelin", "Ballonkorb", "Strassenbahn", "Bus", "auf der Kanonenkugel", "auf dem Pferd", "unter der Brücke", "auf der Brücke", "Krematorium", "Friedhof", "Kirmes-/Jahrmarktsgerät (z.B. Riesenrad, Geisterbahn)", "Telefonzelle", "Weihnachtsmarkt", "Verkehrsübungsplatz", "Baumschule", "im gegnerischen Strafraum", "Sanatorium", "Zoo", "Zirkus", "auf dem Jakobsweg", "auf dem Laufsteg", "Orchestergraben", "Zu-Spät-Kommer-Loge im Theater"];
var gebaeude = ["Aussichtsturm", "Bauernhaus", "Geschäft", "Hochhaus", "Hühnerstall", "Kaserne", "Kirche/Kapelle/Kathedrale", "Kloster", "Krankenhaus (OP, Kreissaal, Notaufnahme, Säuglingstation, Röntgenraum, Gipsraum)", "Polizeistation (Ausnüchterungszelle)", "Rathaus", "Wolkenkratzer", "Stadion", "Pyramide", "Gefängnis", "Eisstation", "Eiffelturm", "Forsthaus", "Anwaltskanzlei", "Baumarkt", "Betriebsversammlung", "Bordell", "Büro", "Chefsekretariat", "Fabrik (Fliessband)", "Friseur", "Grossraumbüro", "Hafen", "Internetcafe", "Kantine", "Kieferorthopäde", "Kindergarten", "Markthalle", "Marktplatz", "Massagepraxis", "Messestand", "Muckibude/Fitnessstudio", "Nagelstudio", "Schlachterei", "Schule", "Sonnenstudio", "Steuerberaterkanzlei", "Supermarkt", "Waschsalon", "Werbeagentur", "Würstchenbude", "Zahnarzt", "Zoofachgeschäft", "Zweithaarstudio"];
var land = ["Argentinien", "Australien", "Belgien", "Deutschland", "Frankreich", "Italien", "Japan", "Mexico", "Niederlande", "Österreich", "Russland", "Schweiz", "Spanien", "USA"];
var raum = ["Bibliothek", "Einwohnermeldeamt", "Kino", "Konzertsaal", "Theater", "Praxis", "Standesamt", "KFZ-Zulassungsstelle", "Museum", "Arbeitszimmer", "Badezimmer", "Besenkammer", "Hobbyraum", "Kinderzimmer", "Schlafzimmer", "Wohnzimmer", "Küche", "Garage", "begehbarer Schrank", "Abstellraum", "Musikzimmer", "Gästezimmer", "Speisekammer", "Keller", "Dachboden", "Ankleidezimmer", "Kaminzimmer", "Balkon", "Gartenhaus", "WG Küche", "Speisezimmer", "Haushaltsraum"];
var fortbewegungsmittel = ["Schiff/U-Boot (drauf oder drinnen)", "Kreuzfahrtschiff", "Fischkutter", "Flugzeug", "Auto, LKW, Bus", "Wohnwagen, Wohnmobil", "Motorrad", "Zug", "Seilbahn", "Kutsche", "Fahrstuhl", "Zeppelin", "Ballonkorb", "Strassenbahn", "Bus", "auf der Kanonenkugel", "auf dem Pferd"];
var routine = ["Tapezieren", "Streichen (Wände, Fenster)", "Bügeln", "Wäsche aufhängen", "Bier zapfen, Flaschen öffnen uä. Thekentätigkeiten", "Meditieren (im Schneidersitz sitzen)", "Fernsehen (sitzend auf einen Punkt starren, mit Hilfe der Fernbedienung zappen)", "Kochen (Zutaten hinzufügen, Hitze einstellen, Umrühren, Würzen usw.)", "Töpfern und etwas Rundes formen an einer drehenden Töpferscheibe", "am Computer (-bildschirm) arbeiten und Tastatur bedienen", "aktiv am Fitnessgerät sein", "Boden wischen oder fegen", "Fenster putzen", "Fegen", "Beten (Kirche)", "Holz hacken", "Sägen", "Auto fahren (Lenken, Schalten)", "Gartenarbeit (Unkraut zupfen, Einpflanzen, Ernten, Rasen mähen)", "Blumen giessen", "Schwimmen", "Leiter hochsteigen", "Musizieren, z.B. Klavier, Gitarre, Geige spielen", "Ein Bild malen oder jemanden porträtieren", "Sport treiben, z.B. Dart, (Tisch-)Tennis, (Mini-)Golf", "Duschen oder Baden", "Nähen, Stricken, Häkeln", "Händewaschen", "Zähne putzen", "Nägel schneiden oder Lackieren", "Zigarette anzünden und rauchen", "Getränk einschenken und trinken", "Geschirr spülen", "sich sonnen (mit Handtuch ausbreiten, Eincremen)", "am Fliessband arbeiten", "handwerklich arbeiten (z.B. Schuh besohlen)"];
var genreFernseh = ["Abenteuerfilm", "Actionfilm", "Adelsromanze", "Amateurfilm", "Bergfilm / Bergsteigerdrama", "Bibelfilm / Sandalenfilm", "Bollywood Film / Indische Liebesfilme", "Dogma (mit verwackelter Handkamera", "Eastern / Kung Fu", "Erotikfilm", "Fantasy", "Fassbinder-Filme", "Film Noir / Fanzösischer Film der 50er Jahre", "Heimatfilm", "Historienfilm", "Horrorfilm / Zombiefilm / Kettensägemassaker", "Horrorkomödie", "Katastrophenfilm / Flugzeugkatastrophe / Weltuntergangs Szenario", "Kinderfilm", "Komödie", "Kriegsfilm", "Kriminalfilm", "Liebesfilm", "Mantel und Degen / Drei Musketiere", "Märchen", "Martial Art", "Melodram", "Milieustudie", "Monumentalfilm", "Monsterfilm / Gozilla / King Kong", "Musik-Film", "Piratenfilm", "Porno (Softcore/Hardcore)", "Roadmovie", "Sandalenepos", "Science Fiction, Weltraumepos, Begegnung mit Ausserirdischen", "Spionage: James Bond 007; Der Spion der aus der Kälte kam, …", "Sex - Komödie", "Slapstick", "Splatter", "Spionagefilm", "Stummfilm", "Superhelden - Supermann, Batman und andere Comicvorlagen", "Teenager - Komödie", "Thriller", "Tragödie", "Tragikomödie", "Vampirfilm", "Western: Western, Italowestern (Spaghetti-Western), Western Komödie", "Zeichentrick /Comic / Manga", "Arztserie", "Beratungssendung: Medizinische Themen", "Dokusoap: Auswanderer, Kindererziehung, Haus einrichten", "Gerichtssendung", "Gottesdienst, Fernsehprediger", "Grand Prix d'Eurovision", "Hitparade", "Infotainment", "Kindersendung (Sesamstrasse, Sendung mit der Maus)", "Kochshow", "Komödienstadl", "Kultursendung / Arte", "Kunst und Krempel (Antiquitäten Experten beraten)", "Musikantenstadl", "Nachrichtensendung (Tagesschau)", "Reality-TV", "Reise- / Städtemagazin", "Reportage", "Sitcom", "Soap, Seifenoper", "Sport: Sportschau, Live-Übertragung", "Sprachkurs", "Genre Talkshow", "Telekolleg", "Genre Teleshop (Dauerwerbesendung)", "Tierdoku", "Verkehrserziehungsspots: Der 7. Sinn", "Wahlstudio", "Wahlwerbung", "Werbung und Mainzelmännchen", "Wetterbericht", "Wiso / Politik und Wirtschaft", "Wissenschaft", "Wissenschaftsshow", "Wort am Sonntag", "XY Ungelöst"];
var genreMusik = ["Gregorianische Gesänge", "Mittelalterliche Musik", "Kirchenmusik / Orgel und Coral", "Moritatensänger / Minnesänger", "Sauf- / Studentenlied", "Liebeslied / derbe Lieder", "Stummfilm / Ragtime", "Oper (siehe Theater)", "Kunstlied / Sänger und Klavier (Schubert)", "12 Ton Musik / atonale Musik (einfach schräg singen!)", "Minimal Musik", "Ambient (Viel Musik wenig Gesang)", "Italienisches Bell Canto (Pavarotti)", "chinesische Oper/Musik", "Operette", "Musical", "Jazz / Jazzbalade / Jazzsong (Standard)", "Dixieland / Louis Amstrong", "Latin Jazz / Bossa Nova", "Elektrik Jazz / Rock Jazz", "Free Jazz / Archi Shepp", "Punk Jazz / sehr heftiges Schlagzeug, Gesang wie bei Punk", "Salsa / Merenge", "Afrikanischer Pop / M. Makeba", "Reggae", "Country & Western", "Hilly Billy", "Motown", "Soul", "Genre Gospel", "Singer & Songwriter", "Liedermacher", "Chanson / Canzoni", "Volksmusik (auch außereuropäisch)", "Irish Folk", "Bauchtanzmusik", "klassische chinesische Musik", "Indianertanz / Schamananentanz", "Afrikanische Musik (Trommeln, Vorsänger und Kehrreim)", "Obertongesang", "Jodeln", "Gstanzl (Bayerisches Couplé nur für Eingeweihte)", "Kabarett Lied", "Couplé / Spottlied", "Sozialistisches Arbeiterlied", "Volkstümliche Musik (Musikantenstadl)", "Genre Schlager", "Rock", "Hard Rock", "Death Metal", "Heavy Metal", "Punk", "Neue Deutsche Welle", "Techno / Elektronische Musik", "Rap", "Genre Hip Hop", "A Capella / A Capella Instrumental", "Kinderlied"];
var beziehung = ["Ehepaar", "Vater/Kind", "Mutter/Kind", "Schwiegermutter und Schwiegertochter/Sohn o.ä.", "Geschwister", "Grosseltern und Enkel", "Stiefeltern/Stiefkind", "Patchwork-Familie", "Ehepaar", "Prostituierte und Freier", "Alternder Liebhaber", "Erwischter Geliebter", "Dreiecksverhältnis", "Erste Verabredung", "Schwules Pärchen", "Ex-Frau und neue Frau", "Ex-Mann und neuer Mann", "Lehrer und Schüler", "Lehrer und Schulleiter", "Lehrer und Eltern", "Schüler und Gang", "Verrückter Professor", "Ausbildungsoffizier und Rekrut", "Wächter und Gefangener", "Rechtsanwalt und Klient", "Richter und Rechtsanwalt", "Kriminalkommissar und Ganove/Verbrecher", "Autobahnpolizist und Autofahrer", "Sheriff und Gangsterbande", "Verkehrspolizist und Temposünder (auch Knöllchenverteiler und Falschparker)", "Terrorist und Geisel", "Angeklagter und Richter", "Psychopath und Opfer", "Film/Popstar und Fan", "Schauspieler und Regisseur", "Regisseur und Produzent", "Schauspieler und Stunt-Double", "Spermium und Eizelle", "X-Chromosom und Y-Chromosom", "Blutzelle und Bakterium", "PC und Benutzer", "Früchte in der Obstschale", "Roboter und sein Schöpfer", "Kind und Spielzeug/Puppe", "Bauchredner und Puppe", "Zahnstocher und Zahn/Gebiss", "5-Euro-Schein und 100-Euro-Schein", "Hund und Knochen", "Ratte und Laborwissenschaftler", "Fisch und der Wurm am Haken", "Frosch und Prinzessin", "Präparator und Tier", "Herrchen/Frauchen/Kind und Haustier", "(schlechtes) Gewissen und (zugehöriger) Mensch", "Gott und Mensch", "Gott und Teufel", "Buddha und Christus", "Dämon und Engel", "Alice und das weisse Kaninchen", "Astronaut und Ausserirdischer", "Seele und Person", "Erste Begegnung (Mensch und Ausserirdischer)", "'weisse Mäuse' und die Person, die halluziniert", "Mensch und Spiegelbild", "Person und eingebildeter Freund (z.B. Harvey)", "Kapitän und Geist", "romantischer Mann und die Blumen, die er mit sich trägt", "Totengräber und Geist/Leiche", "Cowboy und Indianer", "Räuber und Gendarm", "Batman und Robin", "Kasper und Seppel/Grossmutter/Krokodil...", "Big Brother und Kandidat", "Kandidat und Quizshowmaster", "Pilot und Crew/Passagiere/Stewardess...", "Chef und Mitarbeiter/Sekretärin", "Präsident und Kabinett (insb. in Kriegszeiten)", "Politiker und Wähler", "Buchhalter und Geschäftsmann/Frau", "Vorarbeiter und Arbeitskolonne", "Fabrikarbeiter und Konzernchef", "Herr und Diener/Dienstmädchen", "Dekorateur/Feng-Shui-Berater und Wohnungseigentümer", "Boxtrainer und Boxer (auch für andere Sportarten)", "Räuber/Mörder und sein bester Freund", "Waffenhändler und Pazifist", "Croupier und Roulettespieler", "Arzt und Patient/Krankenschwester", "Psychiater und Patient", "Tierarzt und Patient/Besitzer des Tiers", "Wärter und Psychisch Kranker", "Assistenzarzt und Chefarzt", "Schönheitschirurg und alterndes Topmodel", "Papst und Kardinal", "Priester und Gemeindemitglied", "Priester und Messdiener", "Guru und Jünger", "Kellner und Gast", "Verkäufer und Kunde", "Taxifahrer und Kunde", "Massschneider und Kunde", "Friseur und Kunde", "Automechaniker und Autobesitzer", "Bus/U-Bahn-Fahrer und Fahrgast", "Totengräber unter sich ...", "Mitarbeiter der Einwanderungsbehörde und Einwanderer ...", "McDonalds-Manager und 'Ökokrieger'", "Herr und Sklave", "Freunde aus der Kindheit, die sich wiedersehen"];
function documentReady(fn) {
    if (document.readyState === "complete" || document.readyState === "interactive") {
        setTimeout(fn, 1);
    } else {
        document.addEventListener("DOMContentLoaded", fn);
    }
}
function random(min, max) {
    return Math.random() * (max - min) + min;
}
function randomInt(min, max) {
    return Math.floor(Math.random() * (max - min + 1) + min);
}
function noise(selector, file) {
    var container = document.querySelector(selector);
    if (!container) return;
    var sound = new Howl({
        src: ["https://media.zottelig.ch/clown/audio/" + file],
        preload: false,
        html5: true
    });
    container.addEventListener("click", function () {
        sound.play();
    });
}
function noises(selector, files) {
    var container = document.querySelector(selector);
    if (!container) return;
    var _loop_1 = function (file) {
        var sound = new Howl({
            src: ["https://media.zottelig.ch/clown/audio/" + file.name],
            preload: false,
            html5: true,
            volume: file.volume,
            loop: !file.random,
            stereo: typeof file.pan === "number" ? file.pan : undefined,
            onend: function () {
                if (file.random) {
                    setTimeout(function () {
                        if (!running) return;
                        if (file.pan === "random") file.sound.stereo(random(-1, 1));
                        file.sound.play();
                    }, file.random * 1000);
                }
            }
        });
        file.sound = sound;
    };
    for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {
        var file = files_1[_i];
        _loop_1(file);
    }
    var running = false;
    container.addEventListener("click", function () {
        try {
            if (running) {
                running = false;
                for (var _i = 0, files_2 = files; _i < files_2.length; _i++) {
                    var file = files_2[_i];
                    file.sound.stop();
                }
            } else {
                running = true;
                var _loop_2 = function (file) {
                    if (!file.random) file.sound.play();else {
                        setTimeout(function () {
                            if (!running) return;
                            if (file.pan === "random") file.sound.stereo(random(-1, 1));
                            file.sound.play();
                        }, file.random * 1000);
                    }
                };
                for (var _a = 0, files_3 = files; _a < files_3.length; _a++) {
                    var file = files_3[_a];
                    _loop_2(file);
                }
            }
        } catch (e) {
            alert(e);
        }
    });
}
function inspiration(selector, list) {
    var container = document.querySelector(selector);
    if (!container) return;
    container.addEventListener("click", function () {
        if (!container) return;
        var text = container.querySelector(".text");
        if (!text) return;
        text.textContent = list[randomInt(0, list.length - 1)];
    });
}
documentReady(function () {
    noise(".clown", "nose.mp3");
    noise(".service-bell", "service-bell.mp3");
    noises(".city", city);
    noises(".forest", forest);
    inspiration(".beruf", beruf);
    inspiration(".hobby", hobby);
    inspiration(".tick", tick);
    inspiration(".gefuehl", gefuehl);
    inspiration(".gefuehl-angenehm", gefuehlAngenehm);
    inspiration(".koerperteil", koerperteil);
    inspiration(".tier", tier);
    inspiration(".fabelwesen", fabelwesen);
    inspiration(".phobie", phobie);
    inspiration(".ort", ort);
    inspiration(".gebaeude", gebaeude);
    inspiration(".land", land);
    inspiration(".raum", raum);
    inspiration(".fortbewegungsmittel", fortbewegungsmittel);
    inspiration(".routine", routine);
    inspiration(".genre-fernseh", genreFernseh);
    inspiration(".genre-musik", genreMusik);
    inspiration(".beziehung", beziehung);
});
var city = [{ name: "city/car-drive-by.mp3", volume: 1.0, pan: -0.6, random: 5 }, { name: "city/car-horn-2.mp3", volume: 1.0, pan: -0.3, random: 600 }, {
    name: "city/footsteps-on-concrete.mp3",
    volume: 0.9,
    pan: -0.1,
    random: 120
}, { name: "city/newspaper.mp3", volume: 0.6, pan: 0.2, random: 120 }, { name: "city/quiet-bar.mp3", volume: 0.4, pan: 0.3 }, {
    name: "city/residential-traffic.mp3",
    volume: 0.7,
    pan: -0.1,
    crossfade: 3.0
}, { name: "city/vespa-passing.mp3", volume: 0.9, pan: -0.2, random: 300 }];
var forest = [{
    name: "forest/crow-three-times.mp3",
    volume: 0.8,
    pan: "random",
    random: 900
}, { name: "forest/cuckoo.mp3", volume: 0.8, pan: "random", random: 900 }, { name: "forest/distant-forest-ambience.mp3", volume: 0.7 }, {
    name: "forest/gray-woodpecker.mp3",
    volume: 0.8,
    pan: "random",
    random: 1800
}, {
    name: "forest/leaves-rustling.mp3",
    volume: 0.5,
    pan: 0.3,
    random: 150
}, {
    name: "forest/nightengale-call.mp3",
    volume: 0.8,
    pan: "random",
    random: 300
}, {
    name: "forest/nightengale-song1.mp3",
    volume: 0.8,
    pan: "random",
    random: 450
}, {
    name: "forest/white-throated-sparrow.mp3",
    volume: 0.8,
    pan: "random",
    random: 1800
}, {
    name: "forest/wind-blow-in-the-trees.mp3",
    volume: 0.5,
    pan: -0.2,
    random: 75
}, {
    name: "forest/wind-blows-in-leaves.mp3",
    volume: 0.5,
    pan: 0.5,
    random: 60
}, {
    name: "forest/woodpecker-adult.mp3",
    volume: 0.8,
    pan: "random",
    random: 1800
}, {
    name: "forest/woodpecker-young.mp3",
    volume: 0.8,
    pan: "random",
    random: 450
}];
$(".menu .item").tab();
$(".ui.slider").slider({
    min: 0,
    max: 100,
    step: 1
});

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NjcmlwdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO1FBQUE7UUFDQTs7UUFFQTtRQUNBOztRQUVBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBOztRQUVBO1FBQ0E7O1FBRUE7UUFDQTs7UUFFQTtRQUNBO1FBQ0E7OztRQUdBO1FBQ0E7O1FBRUE7UUFDQTs7UUFFQTtRQUNBO1FBQ0E7UUFDQSwwQ0FBMEMsZ0NBQWdDO1FBQzFFO1FBQ0E7O1FBRUE7UUFDQTtRQUNBO1FBQ0Esd0RBQXdELGtCQUFrQjtRQUMxRTtRQUNBLGlEQUFpRCxjQUFjO1FBQy9EOztRQUVBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQTtRQUNBO1FBQ0E7UUFDQSx5Q0FBeUMsaUNBQWlDO1FBQzFFLGdIQUFnSCxtQkFBbUIsRUFBRTtRQUNySTtRQUNBOztRQUVBO1FBQ0E7UUFDQTtRQUNBLDJCQUEyQiwwQkFBMEIsRUFBRTtRQUN2RCxpQ0FBaUMsZUFBZTtRQUNoRDtRQUNBO1FBQ0E7O1FBRUE7UUFDQSxzREFBc0QsK0RBQStEOztRQUVySDtRQUNBOzs7UUFHQTtRQUNBOzs7Ozs7Ozs7Ozs7Ozs7QUNsRkEsSUFBTSxRQUFRLENBQ1osY0FEWSxFQUVaLGlCQUZZLEVBR1osY0FIWSxFQUlaLGNBSlksRUFLWixXQUxZLEVBTVosYUFOWSxFQU9aLGNBUFksRUFRWixpQkFSWSxFQVNaLGdCQVRZLEVBVVosV0FWWSxFQVdaLGdCQVhZLEVBWVosY0FaWSxFQWFaLGNBYlksRUFjWixjQWRZLEVBZVosZUFmWSxFQWdCWixlQWhCWSxFQWlCWixlQWpCWSxFQWtCWixpQkFsQlksRUFtQlosZUFuQlksRUFvQlosbUJBcEJZLEVBcUJaLGtCQXJCWSxFQXNCWixlQXRCWSxFQXVCWixVQXZCWSxFQXdCWixnQkF4QlksRUF5QlosZ0JBekJZLEVBMEJa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VUF2R2MsRUF3R2QsZ0JBeEdjLEVBeUdkLFlBekdjLEVBMEdkLFlBMUdjLEVBMkdkLFlBM0djLEVBNEdkLE1BNUdjLEVBNkdkLFFBN0djLEVBOEdkLFdBOUdjLEVBK0dkLE1BL0djLEVBZ0hkLFVBaEhjLEVBaUhkLFlBakhjLEVBa0hkLFFBbEhjLEVBbUhkLFdBbkhjLEVBb0hkLGFBcEhjLEVBcUhkLFNBckhjLEVBc0hkLFVBdEhjLEVBdUhkLFVBdkhjLEVBd0hkLFNBeEhjLEVBeUhkLFdBekhjLEVBMEhkLFVBMUhjLEVBMkhkLFNBM0hjLEVBNEhkLFNBNUhjLEVBNkhkLGFBN0hjLEVBOEhkLFVBOUhjLEVBK0hkLFFBL0hjLEVBZ0lkLFdBaEljLEVBaUlkLFNBakljLEVBa0lkLFNBbEljLEVBbUlkLFNBbkljLEVBb0lkLFVBcEljLEVBcUlkLFdBckljLEVBc0lkLFVBdEljLEVBdUlkLFNBdkljLEVBd0lkLGNBeEljLEVBeUlkLFdBekljLEVBMElkLFlBMUljLEVBMklkLE9BM0ljLEVBNElkLFNBNUljLEVBNklkLGFBN0ljLEVBOElkLFFBOUljLEVBK0lkLFVBL0ljLEVBZ0pkLFVBaEpjLEVBaUpkLFNBakpjLEVBa0pkLGFBbEpjLEVBbUpkLGFBbkpjLEVBb0pkLGVBcEpjLEVBcUpkLFlBckpjLEVBc0pkLGVBdEpjLEVBdUpkLGNBdkpjLEVBd0pkLFdBeEpjLEVBeUpkLFlBekpjLEVBMEpkLE1BMUpjLEVBMkpkLE1BM0pjLEVBNEpkLFdBNUpjLEVBNkpkLFdBN0pjLEVBOEpkLFVBOUpjLEVBK0pkLFNBL0pjLEVBZ0tkLE1BaEtjLEVBaUtkLFFBaktjLEVBa0tkLFdBbEtjLEVBbUtkLFFBbktjLEVBb0tkLFNBcEtjLEVBcUtkLFFBcktjLEVBc0tkLFNBdEtjLEVBdUtkLFVBdktjLEVBd0tkLGVBeEtjLEVBeUtkLFdBektjLEVBMEtkLGNBMUtjLEVBMktkLFdBM0tjLEVBNEtkLE1BNUtjLEVBNktkLFFBN0tjLEVBOEtkLFVBOUtjLEVBK0tkLE9BL0tjLEVBZ0xkLFFBaExjLEVBaUxkLGNBakxjLEVBa0xk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aEIsMkJBM0NnQixFQTRDaEIsMEJBNUNnQixFQTZDaEIsdUJBN0NnQixFQThDaEIsNkJBOUNnQixFQStDaEIsbUNBL0NnQixFQWdEaEIsa0JBaERnQixFQWlEaEIsZ0NBakRnQixFQWtEaEIsNkJBbERnQixFQW1EaEIsdUJBbkRnQixFQW9EaEIscUJBcERnQixFQXFEaEIscUNBckRnQixFQXNEaEIsZ0RBdERnQixFQXVEaEIsaUJBdkRnQixFQXdEaEIsaUJBeERnQixFQXlEaEIscUJBekRnQixFQTBEaEIsaUJBMURnQixFQTJEaEIsZ0NBM0RnQixFQTREaEIsK0JBNURnQixFQTZEaEIsa0JBN0RnQixFQThEaEIsOENBOURnQixFQStEaEIsaURBL0RnQixFQWdFaEIsd0JBaEVnQixFQWlFaEIsK0NBakVnQixFQWtFaEIsbUJBbEVnQixFQW1FaEIseURBbkVnQixFQW9FaEIsOEJBcEVnQixFQXFFaEIscUJBckVnQixFQXNFaEIsb0JBdEVnQixFQXVFaEIsa0JBdkVnQixFQXdFaEIsMkNBeEVnQixFQXlFaEIsMEJBekVnQixFQTBFaEIsNkJBMUVnQixFQTJFaEIseUNBM0VnQixFQTRFaEIsaUNBNUVnQixFQTZFaEIsZ0RBN0VnQixFQThFaEIsc0JBOUVnQixFQStFaEIsbUNBL0VnQixFQWdGaEIsZ0NBaEZnQixFQWlGaEIsZ0NBakZnQixFQWtGaEIsK0JBbEZnQixFQW1GaEIscURBbkZnQixFQW9GaEIsbURBcEZnQixFQXFGaEIsc0NBckZnQixFQXNGaEIsNEJBdEZnQixFQXVGaEIsOEJBdkZnQixFQXdGaEIsbUNBeEZnQixFQXlGaEIsd0JBekZnQixFQTBGaEIseUNBMUZnQixFQTJGaEIsOEJBM0ZnQixFQTRGaEIsNEJBNUZnQixFQTZGaEIsMENBN0ZnQixFQThGaEIsb0JBOUZnQixFQStGaEIsK0JBL0ZnQixFQWdHaEIseUJBaEdnQixFQWlHaEIsaUJBakdnQixFQWtHaEIsa0JBbEdnQixFQW1HaEIscUJBbkdnQixFQW9HaEIsc0JBcEdnQixFQXFHaEIseUJBckdnQixFQXNHaEIsbUJBdEdnQixFQXVH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QUdFLFNBQUssUUFIUDtBQUlFLFlBQVE7QUFKVixDQW5EVyxFQXlEWDtBQUNFLFVBQU0sNkJBRFI7QUFFRSxZQUFRLEdBRlY7QUFHRSxTQUFLLFFBSFA7QUFJRSxZQUFRO0FBSlYsQ0F6RFcsQ0FBYjtBQWlFQSxFQUFFLGFBQUYsRUFBaUIsR0FBakI7QUFFQSxFQUFFLFlBQUYsRUFBZ0IsTUFBaEIsQ0FBdUI7QUFDckIsU0FBSyxDQURnQjtBQUVyQixTQUFLLEdBRmdCO0FBR3JCLFVBQU07QUFIZSxDQUF2QixFIiwiZmlsZSI6InNjcmlwdC5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSBcIi4vc3JjL3NjcmlwdC50c1wiKTtcbiIsImNvbnN0IGJlcnVmID0gW1xyXG4gIFwiQWJ0L8OEYnRpc3NpblwiLFxyXG4gIFwiQWx0ZW5wZmxlZ2VyL2luXCIsXHJcbiAgXCJBcG90aGVrZXIvaW5cIixcclxuICBcIkFyY2hpdGVrdC9pblwiLFxyXG4gIFwiQXJ0aXN0L2luXCIsXHJcbiAgXCJBcnp0L8OEcnp0aW5cIixcclxuICBcIkFzdHJvbmF1dC9pblwiLFxyXG4gIFwiQXVnZW5vcHRpa2VyL2luXCIsXHJcbiAgXCJBdXRvaMOkbmRsZXIvaW5cIixcclxuICBcIkLDpGNrZXIvaW5cIixcclxuICBcIkJhZGVtZWlzdGVyL2luXCIsXHJcbiAgXCJCYXJrZWVwZXIvaW5cIixcclxuICBcIkJhdWVyL0Zhcm1lclwiLFxyXG4gIFwiQmVyZsO8aHJlci9pblwiLFxyXG4gIFwiQmVyZ2bDvGhyZXIvaW5cIixcclxuICBcIkJlcmdtYW5uL2ZyYXVcIixcclxuICBcIkJldG9uYmF1ZXIvaW5cIixcclxuICBcIkJpYmxpb3RoZWthci9pblwiLFxyXG4gIFwiQmllcmJyYXVlci9pblwiLFxyXG4gIFwiQmlubmVuc2NoaWZmZXIvaW5cIixcclxuICBcIkJpb2xvZ2UvQmlvbG9naW5cIixcclxuICBcIkJvb3RzYmF1ZXIvaW5cIixcclxuICBcIkJveGVyL2luXCIsXHJcbiAgXCJCcmllZnRyw6RnZXIvaW5cIixcclxuICBcIkJ1Y2how6RuZGxlci9pblwiLFxyXG4gIFwiQnVuZGVza2Fuemxlci9pblwiLFxyXG4gIFwiQ2FsbC1DZW50ZXItQWdlbnRcIixcclxuICBcIkNoZW1pa2VyL2luXCIsXHJcbiAgXCJDaG9yc8Okbmdlci9pblwiLFxyXG4gIFwiQ29tZWR5LUF1dG9yXCIsXHJcbiAgXCJDcmVhdGl2ZSBEaXJlY3RvclwiLFxyXG4gIFwiRGFjaGRlY2tlci9pblwiLFxyXG4gIFwiRGFtZW5zY2huZWlkZXIvaW5cIixcclxuICBcIkRlc2lnbmVyL2luXCIsXHJcbiAgXCJEaXJpZ2VudC9pblwiLFxyXG4gIFwiRGlza2pvY2tleVwiLFxyXG4gIFwiRG9sbWV0c2NoZXIvaW5cIixcclxuICBcIkRyb2dpc3QvaW5cIixcclxuICBcIkVoZWJlcmF0ZXIvaW5cIixcclxuICBcIkVpc3ZlcmvDpHVmZXIvaW5cIixcclxuICBcIkVsZWt0cmlrZXIvaW5cIixcclxuICBcIkVsZWt0cm9uaWtlci9pblwiLFxyXG4gIFwiRW5lcmdpZWJlcmF0ZXIvaW5cIixcclxuICBcIkVyZ290aGVyYXBldXRoL2luXCIsXHJcbiAgXCJFcm7DpGhydW5nc2JlcmF0ZXIvaW5cIixcclxuICBcIkVyemllaGVyL2luXCIsXHJcbiAgXCJFdmVudC1NYW5hZ2VyL2luXCIsXHJcbiAgXCJGYWhybGVocmVyXCIsXHJcbiAgXCJGYWhycmFka3VyaWVyL2luXCIsXHJcbiAgXCJGYWhycmFkbW9udGV1ci9pblwiLFxyXG4gIFwiRmV1ZXJ3ZWhybWFublwiLFxyXG4gIFwiRmlzY2hlci9pblwiLFxyXG4gIFwiRmxlaXNjaGVyXCIsXHJcbiAgXCJGbGVpc2NoZXIvaW5cIixcclxuICBcIkZsaWVzZW5sZWdlci9pblwiLFxyXG4gIFwiRmxvcmlzdC9pblwiLFxyXG4gIFwiRmx1Z2xvdHNlL0ZsdWdsb3RzaW5cIixcclxuICBcIkZvdG9ncmFmL2luXCIsXHJcbiAgXCJGcmllZGhvZnNnw6RydG5lci9pblwiLFxyXG4gIFwiRnJpc2V1ci9pblwiLFxyXG4gIFwiRnVzc2JhbGwtU2NoaWVkc3JpY2h0ZXIvaW5cIixcclxuICBcIkfDpHJ0bmVyL2luXCIsXHJcbiAgXCJHZWLDpHVkZXJlaW5pZ2VyL2luXCIsXHJcbiAgXCJHZWJ1cnRzaGVsZmVyL2luXCIsXHJcbiAgXCJHZWbDpG5nbmlzd8OkcnRlci9pblwiLFxyXG4gIFwiR2VpZ2VuYmF1ZXIvaW5cIixcclxuICBcIkdsYXNlci9pblwiLFxyXG4gIFwiR2xlaXNiYXVlci9pblwiLFxyXG4gIFwiR29sZHNjaG1pZWQvaW5cIixcclxuICBcIkdyb8OfaGFuZGVsc2thdWZtYW5uXCIsXHJcbiAgXCJHeW1uYXNpYWxsZWhyZXJcIixcclxuICBcIkhhdXNmcmF1L0hhdXNtYW5uXCIsXHJcbiAgXCJIZWFkaHVudGVyXCIsXHJcbiAgXCJIw7ZyYWt1c3Rpa2VyL2luXCIsXHJcbiAgXCJIb3RlbGllclwiLFxyXG4gIFwiSHVtYW4gUmVzb3VyY2VzIE1hbmFnZXIvaW5cIixcclxuICBcIkh1bmRldHJhaW5lci9pblwiLFxyXG4gIFwiSW1rZXIvaW5cIixcclxuICBcIkltbW9iaWxpZW5tYWtsZXIvaW5cIixcclxuICBcIkluZHVzdHJpZWtsZXR0ZXJlclwiLFxyXG4gIFwiSW5mb3JtYXRpa2VyL2luXCIsXHJcbiAgXCJJbmdlbmlldXJcIixcclxuICBcIklubmVuYXJjaGl0ZWt0L2luXCIsXHJcbiAgXCJKw6RnZXJcIixcclxuICBcIkphenotTXVzaWtlclwiLFxyXG4gIFwiSm91cm5hbGlzdC9pblwiLFxyXG4gIFwiSnVyaXN0L2luXCIsXHJcbiAgXCJLYW1lcmFtYW5uL2ZyYXVcIixcclxuICBcIkthbmFsYXJiZWl0ZXIvaW5cIixcclxuICBcIkthcGl0w6RuL2luXCIsXHJcbiAgXCJLbGF2aWVyYmF1ZXIvaW5cIixcclxuICBcIktsZW1wbmVyL2luXCIsXHJcbiAgXCJLb2NoL0vDtmNoaW5cIixcclxuICBcIktvbXBvbmlzdC9pblwiLFxyXG4gIFwiS29zbWV0aWtlci9pblwiLFxyXG4gIFwiS3JhbmtlbnNjaHdlc3Rlci9LcmFua2VucGZsZWdlclwiLFxyXG4gIFwiS3JpbWluYWxrb21taXNzYXIvaW5cIixcclxuICBcIkt1bHR1cnN0YWF0c21pbmlzdGVyL2luXCIsXHJcbiAgXCJMYW5kd2lyL2luXCIsXHJcbiAgXCJMYW5kd2lydC9pblwiLFxyXG4gIFwiTG9nb3DDpGRlL0xvZ29ww6RkaW5cIixcclxuICBcIkxva29tb3RpdmbDvGhyZXIvaW5cIixcclxuICBcIk1hbGVyL2luXCIsXHJcbiAgXCJNYXJrdGZvcnNjaGVyL2luXCIsXHJcbiAgXCJNYXNjaGluZW5iYXVlci9pblwiLFxyXG4gIFwiTWFzc2V1ci9pblwiLFxyXG4gIFwiTWF1cmVyL2luXCIsXHJcbiAgXCJNZWNoYXRyb25pa2VyL2luXCIsXHJcbiAgXCJNZXRlb3JvbG9nZS9NZXRlb3JvbG9naW5cIixcclxuICBcIk3DtmJlbHBhY2tlci9wYWNrZXJpblwiLFxyXG4gIFwiTW9kZWxcIixcclxuICBcIk1vbGtlcmVpYXJiZWl0ZXJcIixcclxuICBcIk11c2lrbGVocmVyXCIsXHJcbiAgXCJPemVhbm9ncmFwaFwiLFxyXG4gIFwiUGFydHlzZXJ2aWNldW50ZXJuZWhtZXJcIixcclxuICBcIlBhdGhvbG9nZVwiLFxyXG4gIFwiUGZhcnJlclwiLFxyXG4gIFwiUGbDtnJ0bmVyL2luXCIsXHJcbiAgXCJQaHlzaWtlci9pblwiLFxyXG4gIFwiUGlsb3QvaW5cIixcclxuICBcIlBvbGl6aXN0L2luXCIsXHJcbiAgXCJQcm9ncmFtbWllcmVyL2luXCIsXHJcbiAgXCJQdXBwZW5zcGllbGVyL2luXCIsXHJcbiAgXCJSYXVtYXVzc3RhdHRlci9pblwiLFxyXG4gIFwiUmVjaHRzYW53YWx0XCIsXHJcbiAgXCJSZWNodHNhbndhbHQvaW5cIixcclxuICBcIlJlZGVuc2NocmVpYmVyL2luXCIsXHJcbiAgXCJSZWdpc3NldXIvaW5cIixcclxuICBcIlJlaXNlbGVpdGVyL2luXCIsXHJcbiAgXCJSZXR0dW5nc3NjaHdpbW1lci9pblwiLFxyXG4gIFwiUmljaHRlci9pblwiLFxyXG4gIFwiU2FuaXTDpHRlci9pblwiLFxyXG4gIFwiU2Now6RkbGluZ3NiZWvDpG1wZmVyL2luXCIsXHJcbiAgXCJTY2jDpGZlci9pblwiLFxyXG4gIFwiU2NoYXVzcGllbGVyL2luXCIsXHJcbiAgXCJTY2hpZmZiYXVlci9pblwiLFxyXG4gIFwiU2Nob3Juc3RlaW5mZWdlci9pblwiLFxyXG4gIFwiU2NocmVpbmVyL2luXCIsXHJcbiAgXCJTY2h1aG1hY2hlci9pblwiLFxyXG4gIFwiU2VrcmV0w6RyL2luXCIsXHJcbiAgXCJTb2xkYXQvaW5cIixcclxuICBcIlNvdWZmbGV1clwiLFxyXG4gIFwiU3BhcmdlbHN0ZWNoZXJcIixcclxuICBcIlNwYXJnZWxzdGVjaGVyL2luXCIsXHJcbiAgXCJTcG9ydGxlaHJlci9pblwiLFxyXG4gIFwiU3RlaW5tZXR6L2luXCIsXHJcbiAgXCJTdGV1ZXJmYWNoYW5nZXN0ZWxsdGVyL2VcIixcclxuICBcIlN0dW50bWFuXCIsXHJcbiAgXCJTdHVudG1hbi9mcmF1XCIsXHJcbiAgXCJTdXJmbGVocmVyL2luXCIsXHJcbiAgXCJUYW5rd2FydFwiLFxyXG4gIFwiVGF4aWZhaHJlci9pblwiLFxyXG4gIFwiVGllcmFyenRcIixcclxuICBcIlRpZXJwZmxlZ2VyXCIsXHJcbiAgXCJUaXNjaGxlclwiLFxyXG4gIFwiVGlzY2hsZXIvaW5cIixcclxuICBcIlTDvHJzdGVoZXJcIixcclxuICBcIlTDvHJzdGVoZXIvaW5cIixcclxuICBcIlVocm1laXN0ZXJcIixcclxuICBcIlVocm1laXN0ZXIvaW5cIixcclxuICBcIlVtd2VsdHNjaMO8dHplci9pblwiLFxyXG4gIFwiVW50ZXJuZWhtZW5zYmVyYXRlci9pblwiLFxyXG4gIFwiVmVyYW5zdGFsdHVuZ3NrYXVmbWFubi9mcmF1XCIsXHJcbiAgXCJWZXJrw6R1ZmVyL2luXCIsXHJcbiAgXCJWZXJzdGVpZ2VyXCIsXHJcbiAgXCJWZXJzdGVpZ2VyZXIvaW5cIixcclxuICBcIlZlcnRlaWRpZ3VuZ3NtaW5pc3RlclwiLFxyXG4gIFwiVmVydGVpZGlndW5nc21pbmlzdGVyL2luXCIsXHJcbiAgXCJXYWZmZW5ow6RuZGxlci9pblwiLFxyXG4gIFwiV2FobGZvcnNjaGVyXCIsXHJcbiAgXCJXYWhsZm9yc2NoZXIvaW5cIixcclxuICBcIldhc3NlcmJhdWVyL2luXCIsXHJcbiAgXCJXZWlobmFjaHRzbWFublwiLFxyXG4gIFwiV2luemVyXCIsXHJcbiAgXCJXaW56ZXIvaW5cIixcclxuICBcIlphaG5hcnp0XCIsXHJcbiAgXCJaYWhuYXJ6dC9pblwiLFxyXG4gIFwiWmVpdHVuZ3N6dXN0ZWxsZXJcIixcclxuICBcIlplaXR1bmdzenVzdGVsbGVyL2luXCIsXHJcbiAgXCJaZXJzcGFudW5nc21lY2hhbmlrZXIvaW5cIixcclxuICBcIlppbW1lcmVyXCIsXHJcbiAgXCJaaW1tZXJlci9pblwiLFxyXG4gIFwiWm9vaMOkbmRsZXIvaW5cIixcclxuICBcIlp1Z2JlZ2xlaXRlclwiLFxyXG4gIFwiWnVnYmVnbGVpdGVyL2luXCJcclxuXTtcclxuXHJcbmNvbnN0IGhvYmJ5ID0gW1xyXG4gIFwiQW5nZWxuXCIsXHJcbiAgXCJCw7xjaGVybmFyclwiLFxyXG4gIFwiSG9iYnlrb2NoXCIsXHJcbiAgXCJQZmxhbnplbiB6w7xjaHRlbiAoUGlsemUsIEtha3RlZW4gLi4uKVwiLFxyXG4gIFwiUGhpbG9zb3BoIC8gTWVkaXRpZXJlblwiLFxyXG4gIFwiU2FtbWxlciAoQnJpZWZtYXJrZW4sIFRlZGR5YsOkcmVuLCBNw7xuemVuIC4uLilcIixcclxuICBcIlNwb3J0IChGdXNzYmFsbCwgQXV0b3Jlbm5lbiwgU25vd2JvYXJkLCBTa2F0ZWJvYXJkLCBQYXJhZ2xlaWRpbmcgLi4uKVwiLFxyXG4gIFwiVGllcmUgesO8Y2h0ZW4gKFNwaW5uZW4sIFJlZ2Vud8O8cm1lciAuLi4pXCIsXHJcbiAgXCJXYW5kZXJuIChXYW5kZXJuLCBCZXJnc3RlaWdlbiAuLi4pXCIsXHJcbiAgXCJXYXNzZXJzcG9ydCAoU2VnZWxuLCBXYXNzZXJza2lmYWhyZW4sIEthamFrLCBLYW51LCBLaXRlc3VyZmVuLCBTdXJmZW4sIFNjaHdpbW1lbiwgVHVybXNwcmluZ2VuLCBTeW5jaHJvbnNjaHdpbW1lbiwgV2Fzc2VyYmFsbCwgV2lsZHdhc3NlciwgVGF1Y2hlbilcIixcclxuICBcIkRhcnN0ZWxsdW5nIGRlcyBNaXR0ZWxhbHRlcnMsIGRlciByw7ZtaXNjaGVuIEdlc2NoaWNodGUuLi5cIixcclxuICBcIk11c2l6aWVyZW4gKEtsYXZpZXIsIEZsw7Z0ZSwgQ2VsbG8sIEdpdGFycmUsIEtvZmZlcnJhZGlvKVwiLFxyXG4gIFwiRm90b2dyYWZpZXJlblwiLFxyXG4gIFwiTWFsZW4gdW5kIFplaWNobmVuIChBa3R6ZWljaG5lbiwgTGFuZHNjaGFmdHNiaWxkZXIsIMOWbGJpbGRlciwgS29obGV6ZWljaG51bmcpXCIsXHJcbiAgXCJLbGVpbmdhcnRlbiAoUmFzZW4gbcOkaGVuLCBTw6RlbiwgRXJudGVuLCBQZmzDvGNrZW4sIEJhdW1zY2huZWlkZW4sIFVtZ3JhYmVuLCBHaWVzc2VuXCIsXHJcbiAgXCJUYW56ZW4gKFN0YW5kYXJkdGFuemVuLCBMYXRlaW4sIFNhbHNhLCBCYWxsZXR0LCBIaXAgSG9wLCBCcmVha2RhbmNlLCBKYXp6dGFueiwgRm9ybWF0aW9uc3RhbnopXCIsXHJcbiAgXCJXaW50ZXJzcG9ydCAoU2tpZmFocmVuLCBFaXNrdW5zdGxhdWZlbiwgQm9iZmFocmVuLCBTa2lzcHJpbmdlbiwgQ3VybGluZylcIixcclxuICBcIktuZWlwZW5zcG9ydCAoQmlsbGFyZCwgUG9vbCwgRGFydCwgVGlzY2hmdXNzYmFsbFwiLFxyXG4gIFwiS2VnZWxuLCBCb3dsaW5nXCJcclxuXTtcclxuXHJcbmNvbnN0IHRpY2sgPSBbXHJcbiAgXCJLcmF0enQgc2ljaCBzdMOkbmRpZyBhbSBLb3BmXCIsXHJcbiAgXCJTdMOkbmRpZ2VzIE5hc2VqdWNrZW5cIixcclxuICBcIlp1Y2tlbiBkZXIgTXVuZHdpbmtlbFwiLFxyXG4gIFwiUnVja2VuIGRlcyBLb3BmZXNcIixcclxuICBcIlJlaWJlbiBpbSBTY2hyaXR0XCIsXHJcbiAgXCJIb2NoemllaGVuIGRlciBBdWdlbmJyYXVlblwiLFxyXG4gIFwiWndpbmtlcm4gbWl0IGVpbmVtIEF1Z2VcIixcclxuICBcIlN0w6RuZGlnZXMgUsOkdXNwZXJuXCIsXHJcbiAgXCJTY2h1aHRpY2tcIixcclxuICBcIktsZXB0b21hbmllIChad2FuZyBldHdhcyBzdGVobGVuIHp1IG3DvHNzZW4pXCIsXHJcbiAgXCJXYXNjaHp3YW5nXCIsXHJcbiAgXCJQeXJvbWFuaWUgKFp3YW5nLCBlaW4gRmV1ZXIgenUgbGVnZW4pXCJcclxuXTtcclxuXHJcbmNvbnN0IGdlZnVlaGwgPSBbXHJcbiAgXCJhYmdlc3Bhbm50XCIsXHJcbiAgXCJhYmxlaG5lbmRcIixcclxuICBcImFjaHRzYW1cIixcclxuICBcImFnZ3Jlc3NpdlwiLFxyXG4gIFwiYWt6ZXB0aWVyZW5kXCIsXHJcbiAgXCJhbGFybWllcnRcIixcclxuICBcImFsYmVyblwiLFxyXG4gIFwiYW1iaXZhbGVudFwiLFxyXG4gIFwiYW5nZWVrZWx0XCIsXHJcbiAgXCJhbmdlcmVndFwiLFxyXG4gIFwiYW5nZXNwYW5udFwiLFxyXG4gIFwiYW5nZXdpZGVydFwiLFxyXG4gIFwiw6RuZ3N0bGljaFwiLFxyXG4gIFwiYW5nc3RzY2hsb3R0ZXJuZFwiLFxyXG4gIFwiYW50cmllYnNsb3NcIixcclxuICBcIsOkcmdlcmxpY2hcIixcclxuICBcImFyZ3fDtmhuaXNjaFwiLFxyXG4gIFwiYXJyb2dhbnRcIixcclxuICBcImF1ZmdlYnJhY2h0XCIsXHJcbiAgXCJhdWZnZWRyZWh0XCIsXHJcbiAgXCJhdWZnZXJlZ3RcIixcclxuICBcImF1Zmdld8O8aGx0XCIsXHJcbiAgXCJhdXNnZWdsaWNoZW5cIixcclxuICBcImF1c2dlbGFzc2VuXCIsXHJcbiAgXCJhdXNnZWxhdWd0XCIsXHJcbiAgXCJiZcOkbmdzdGlndFwiLFxyXG4gIFwiYmVkcsOkbmd0XCIsXHJcbiAgXCJiZWRyw7xja3RcIixcclxuICBcImJlZWluZHJ1Y2t0XCIsXHJcbiAgXCJiZWZhbmdlblwiLFxyXG4gIFwiYmVmbMO8Z2VsdFwiLFxyXG4gIFwiYmVmcmVpdFwiLFxyXG4gIFwiYmVmcmllZGlndFwiLFxyXG4gIFwiYmVnZWlzdGVydFwiLFxyXG4gIFwiYmVnaWVyaWdcIixcclxuICBcImJlaGFnbGljaFwiLFxyXG4gIFwiYmVrbG9tbWVuXCIsXHJcbiAgXCJiZWvDvG1tZXJ0XCIsXHJcbiAgXCJiZWxhc3RldFwiLFxyXG4gIFwiYmVsZWJ0XCIsXHJcbiAgXCJiZWxlaWRpZ3RcIixcclxuICBcImJlbHVzdGlndFwiLFxyXG4gIFwiYmVyYXVzY2h0XCIsXHJcbiAgXCJiZXJlaXRcIixcclxuICBcImJlcmV1ZW5kXCIsXHJcbiAgXCJiZXJ1aGlndFwiLFxyXG4gIFwiYmVyw7xocnRcIixcclxuICBcImJlc2Now6RtdFwiLFxyXG4gIFwiYmVzY2h3aW5ndFwiLFxyXG4gIFwiYmVzZWVsdFwiLFxyXG4gIFwiYmVzb3JndFwiLFxyXG4gIFwiYmVzdMO8cnp0XCIsXHJcbiAgXCJiZXRyb2ZmZW5cIixcclxuICBcImJldHLDvGJ0XCIsXHJcbiAgXCJiZXVucnVoaWd0XCIsXHJcbiAgXCJiZXdlZ3RcIixcclxuICBcImJld3VuZGVybmRcIixcclxuICBcImJlemF1YmVydFwiLFxyXG4gIFwiYml0dGVyXCIsXHJcbiAgXCJibG9ja2llcnRcIixcclxuICBcImJydW1taWdcIixcclxuICBcImRhbmtiYXJcIixcclxuICBcImRlcHJlc3NpdlwiLFxyXG4gIFwiZGVwcmltaWVydFwiLFxyXG4gIFwiZGlzdGFuemllcnRcIixcclxuICBcImR1bXBmXCIsXHJcbiAgXCJkdXJjaGVpbmFuZGVyXCIsXHJcbiAgXCJlaHJmw7xyY2h0aWdcIixcclxuICBcImVpZmVyc8O8Y2h0aWdcIixcclxuICBcImVpZnJpZ1wiLFxyXG4gIFwiZWluc2FtXCIsXHJcbiAgXCJla2VsZXJmw7xsbHRcIixcclxuICBcImVtcGZpbmRsaWNoXCIsXHJcbiAgXCJlbXDDtnJ0XCIsXHJcbiAgXCJlbmVyZ2llZ2VsYWRlblwiLFxyXG4gIFwiZW5lcmdpc2NoXCIsXHJcbiAgXCJlbmdhZ2llcnRcIixcclxuICBcImVudGh1c2lhc3Rpc2NoXCIsXHJcbiAgXCJlbnRsYXN0ZXRcIixcclxuICBcImVudG11dGlndFwiLFxyXG4gIFwiZW50csO8c3RldFwiLFxyXG4gIFwiZW50c2NoaWVkZW5cIixcclxuICBcImVudHNjaGxvc3NlblwiLFxyXG4gIFwiZW50c2V0enRcIixcclxuICBcImVudHNwYW5udFwiLFxyXG4gIFwiZW50dMOkdXNjaHRcIixcclxuICBcImVudHrDvGNrdFwiLFxyXG4gIFwiZXJmcmV1dFwiLFxyXG4gIFwiZXJmcmlzY2h0XCIsXHJcbiAgXCJlcmbDvGxsdFwiLFxyXG4gIFwiZXJncmlmZmVuXCIsXHJcbiAgXCJlcmhlaXRlcnRcIixcclxuICBcImVybGVpY2h0ZXJ0XCIsXHJcbiAgXCJlcmxldWNodGV0XCIsXHJcbiAgXCJlcm3DvGRldFwiLFxyXG4gIFwiZXJtdW50ZXJ0XCIsXHJcbiAgXCJlcm11dGlndFwiLFxyXG4gIFwiZXJuw7xjaHRlcnRcIixcclxuICBcImVycmVndFwiLFxyXG4gIFwiZXJzY2hsYWdlblwiLFxyXG4gIFwiZXJzY2jDtnBmdFwiLFxyXG4gIFwiZXJzY2hyb2NrZW5cIixcclxuICBcImVyc3RhdW50XCIsXHJcbiAgXCJlcndhcnR1bmdzdm9sbFwiLFxyXG4gIFwiZmFzemluaWVydFwiLFxyXG4gIFwiZmVpbmRzZWxpZ1wiLFxyXG4gIFwiZmVpbnNpbm5pZ1wiLFxyXG4gIFwiZnJlaVwiLFxyXG4gIFwiZnJldWVuXCIsXHJcbiAgXCJmcmllZGxpY2hcIixcclxuICBcImZyb2hcIixcclxuICBcImZyw7ZobGljaFwiLFxyXG4gIFwiZnJ1c3RyaWVydFwiLFxyXG4gIFwiZsO8Z3NhbVwiLFxyXG4gIFwiZnVyY2h0c2FtXCIsXHJcbiAgXCJmw7xyc29yZ2xpY2hcIixcclxuICBcImdlYmFubnRcIixcclxuICBcImdlYm9yZ2VuXCIsXHJcbiAgXCJnZWR1bGRpZ1wiLFxyXG4gIFwiZ2VmYXNzdFwiLFxyXG4gIFwiZ2VmZXNzZWx0XCIsXHJcbiAgXCJnZWjDpHNzaWdcIixcclxuICBcImdlaGVtbXRcIixcclxuICBcImdlbGFkZW5cIixcclxuICBcImdlbGFuZ3dlaWx0XCIsXHJcbiAgXCJnZWxhc3NlblwiLFxyXG4gIFwiZ2Vsw7ZzdFwiLFxyXG4gIFwiZ2Vtw7x0bGljaFwiLFxyXG4gIFwiZ2VxdcOkbHRcIixcclxuICBcImdlcmVpenRcIixcclxuICBcImdlcsO8aHJ0XCIsXHJcbiAgXCJnZXJ6ZWl6dFwiLFxyXG4gIFwiZ2VzY2jDvHR6dFwiLFxyXG4gIFwiZ2VzcGFubnRcIixcclxuICBcImdlc3TDtnJ0XCIsXHJcbiAgXCJnbGVpY2hnw7xsdGlnXCIsXHJcbiAgXCJnbMO8Y2tsaWNoXCIsXHJcbiAgXCJnbMO8Y2tzZWxpZ1wiLFxyXG4gIFwiZ8O8dGlnXCIsXHJcbiAgXCJoYXNzZW5kXCIsXHJcbiAgXCJoYXNzZXJmw7xsbHRcIixcclxuICBcImhlaXRlclwiLFxyXG4gIFwiaGVsbHdhY2hcIixcclxuICBcImhlcnpsaWNoXCIsXHJcbiAgXCJoaWxmbG9zXCIsXHJcbiAgXCJoaW5nZXJpc3NlblwiLFxyXG4gIFwiaG9jaGVyZnJldXRcIixcclxuICBcImhvZmZudW5nc3ZvbGxcIixcclxuICBcImluc3BpcmllcnRcIixcclxuICBcImludGVsbGVrdHVlbGxcIixcclxuICBcImludGVyZXNzaWVydFwiLFxyXG4gIFwiaXJyaXRpZXJ0XCIsXHJcbiAgXCJqw6RtbWVybGljaFwiLFxyXG4gIFwia2FsdFwiLFxyXG4gIFwia2xhclwiLFxyXG4gIFwia3JhZnR2b2xsXCIsXHJcbiAgXCJrcmliYmVsaWdcIixcclxuICBcImxlYmVuZGlnXCIsXHJcbiAgXCJsZWJoYWZ0XCIsXHJcbiAgXCJsZWVyXCIsXHJcbiAgXCJsZWljaHRcIixcclxuICBcImxpZWJldm9sbFwiLFxyXG4gIFwibG9ja2VyXCIsXHJcbiAgXCJsw7xzdGVyblwiLFxyXG4gIFwibHVzdGlnXCIsXHJcbiAgXCJsdXN0bG9zXCIsXHJcbiAgXCJsdXN0dm9sbFwiLFxyXG4gIFwibWVsYW5jaG9saXNjaFwiLFxyXG4gIFwibWlzc211dGlnXCIsXHJcbiAgXCJtaXNzdHJhdWlzY2hcIixcclxuICBcIm1vdGl2aWVydFwiLFxyXG4gIFwibcO8ZGVcIixcclxuICBcIm11bnRlclwiLFxyXG4gIFwibcO8cnJpc2NoXCIsXHJcbiAgXCJtdXRpZ1wiLFxyXG4gIFwibXV0bG9zXCIsXHJcbiAgXCJuYWNoZGVua2xpY2hcIixcclxuICBcIm5laWRpc2NoXCIsXHJcbiAgXCJuZXJ2w7ZzXCIsXHJcbiAgXCJuZXVnaWVyaWdcIixcclxuICBcIm5pZWRlcmdlc2NobGFnZW5cIixcclxuICBcIm9mZmVuXCIsXHJcbiAgXCJvaG5tw6RjaHRpZ1wiLFxyXG4gIFwib3B0aW1pc3Rpc2NoXCIsXHJcbiAgXCJwYW5pc2NoXCIsXHJcbiAgXCJwZWRhbnRpc2NoXCIsXHJcbiAgXCJwZWlubGljaFwiLFxyXG4gIFwicGVycGxleFwiLFxyXG4gIFwicGVzc2ltaXN0aXNjaFwiLFxyXG4gIFwicmF0bG9zXCIsXHJcbiAgXCJyZXNwZWt0dm9sbFwiLFxyXG4gIFwicnVoZWxvc1wiLFxyXG4gIFwicnVoaWdcIixcclxuICBcInNhdHRcIixcclxuICBcInNhdWVyXCIsXHJcbiAgXCJzY2hldVwiLFxyXG4gIFwic2NobMOkZnJpZ1wiLFxyXG4gIFwic2NobGFwcFwiLFxyXG4gIFwic2Nob2NraWVydFwiLFxyXG4gIFwic2Nod2VybcO8dGlnXCIsXHJcbiAgXCJzY2h3dW5nbG9zXCIsXHJcbiAgXCJzY2h3dW5ndm9sbFwiLFxyXG4gIFwic2VsYnN0c2ljaGVyXCIsXHJcbiAgXCJzZWxpZ1wiLFxyXG4gIFwic2Vuc2liZWxcIixcclxuICBcInNpY2hlclwiLFxyXG4gIFwic2tlcHRpc2NoXCIsXHJcbiAgXCJzb3JnZW5mcmVpXCIsXHJcbiAgXCJzb3JnZW52b2xsXCIsXHJcbiAgXCJzb3JnbG9zXCIsXHJcbiAgXCJzdGlsbFwiLFxyXG4gIFwic3RvbHpcIixcclxuICBcInN0cmFwYXppZXJ0XCIsXHJcbiAgXCJzdHJlaXRsdXN0aWdcIixcclxuICBcInN0cmVzc2ZyZWlcIixcclxuICBcInRhcGZlclwiLFxyXG4gIFwidGF0a3LDpGZ0aWdcIixcclxuICBcInRlaWxuYWhtc2xvc1wiLFxyXG4gIFwidG9sbGvDvGhuXCIsXHJcbiAgXCJ0csOkZ2VcIixcclxuICBcInRyYXVyaWdcIixcclxuICBcIsO8YmVyZHLDvHNzaWdcIixcclxuICBcIsO8YmVyZm9yZGVydFwiLFxyXG4gIFwiw7xiZXJnbMO8Y2tsaWNoXCIsXHJcbiAgXCLDvGJlcmxhc3RldFwiLFxyXG4gIFwiw7xiZXJtw7x0aWdcIixcclxuICBcIsO8YmVycmFzY2h0XCIsXHJcbiAgXCLDvGJlcnNjaMOkdW1lbmRcIixcclxuICBcIsO8YmVyc2Nod8OkbmdsaWNoXCIsXHJcbiAgXCLDvGJlcnfDpGx0aWd0XCIsXHJcbiAgXCLDvGJlcnpldWd0XCIsXHJcbiAgXCJ1bmJlaGFnbGljaFwiLFxyXG4gIFwidW5iZWvDvG1tZXJ0XCIsXHJcbiAgXCJ1bmJlc2Nod2VydFwiLFxyXG4gIFwidW5iZXRlaWxpZ3RcIixcclxuICBcInVuZXJzY2jDvHR0ZXJsaWNoXCIsXHJcbiAgXCJ1bmdlZHVsZGlnXCIsXHJcbiAgXCJ1bmdlaGFsdGVuXCIsXHJcbiAgXCJ1bmdlbcO8dGxpY2hcIixcclxuICBcInVuZ2zDvGNrbGljaFwiLFxyXG4gIFwidW5rbGFyXCIsXHJcbiAgXCJ1bm5haGJhclwiLFxyXG4gIFwidW5ydWhpZ1wiLFxyXG4gIFwidW5zY2hsw7xzc2lnXCIsXHJcbiAgXCJ1bnNpY2hlclwiLFxyXG4gIFwidW50ZXIgRHJ1Y2tcIixcclxuICBcInVud29obFwiLFxyXG4gIFwidW56dWZyaWVkZW5cIixcclxuICBcInZlcsOkbmdzdGlndFwiLFxyXG4gIFwidmVyw6RyZ2VydFwiLFxyXG4gIFwidmVyYml0dGVydFwiLFxyXG4gIFwidmVyYmzDvGZmdFwiLFxyXG4gIFwidmVyZ27DvGd0XCIsXHJcbiAgXCJ2ZXJsZWdlblwiLFxyXG4gIFwidmVybGV0emJhclwiLFxyXG4gIFwidmVybGV0enRcIixcclxuICBcInZlcmxpZWJ0XCIsXHJcbiAgXCJ2ZXJsb3JlblwiLFxyXG4gIFwidmVycsO8Y2t0XCIsXHJcbiAgXCJ2ZXJzY2hsYWZlblwiLFxyXG4gIFwidmVyc2NobG9zc2VuXCIsXHJcbiAgXCJ2ZXJzY2hyZWNrdFwiLFxyXG4gIFwidmVyc3Bhbm50XCIsXHJcbiAgXCJ2ZXJzcGllbHRcIixcclxuICBcInZlcnN0aW1tdFwiLFxyXG4gIFwidmVyc3TDtnJ0XCIsXHJcbiAgXCJ2ZXJ0cmF1ZW5kXCIsXHJcbiAgXCJ2ZXJ0cmF1ZW5zdm9sbFwiLFxyXG4gIFwidmVydW5zaWNoZXJ0XCIsXHJcbiAgXCJ2ZXJ3aXJydFwiLFxyXG4gIFwidmVyd3VuZGVydFwiLFxyXG4gIFwidmVyemFndFwiLFxyXG4gIFwidmVyemF1YmVydFwiLFxyXG4gIFwidmVyesO8Y2t0XCIsXHJcbiAgXCJ2ZXJ6d2VpZmVsdFwiLFxyXG4gIFwidm9sbGVyIFZvcmZyZXVkZVwiLFxyXG4gIFwidm9yd3VyZnN2b2xsXCIsXHJcbiAgXCJ3YWNoXCIsXHJcbiAgXCJ3YXJtaGVyemlnXCIsXHJcbiAgXCJ3ZWluZXJsaWNoXCIsXHJcbiAgXCJ3aWRlcndpbGxpZ1wiLFxyXG4gIFwid2lzc2JlZ2llcmlnXCIsXHJcbiAgXCJ3b2hsXCIsXHJcbiAgXCJ3b2xsbMO8c3RpZ1wiLFxyXG4gIFwid8O8dGVuZFwiLFxyXG4gIFwiemFwcGVsaWdcIixcclxuICBcInrDpHJ0bGljaFwiLFxyXG4gIFwiemVya25pcnNjaHRcIixcclxuICBcInplcm3DvHJidFwiLFxyXG4gIFwiemVycmlzc2VuXCIsXHJcbiAgXCJ6aXR0cmlnXCIsXHJcbiAgXCJ6w7ZnZXJsaWNoXCIsXHJcbiAgXCJ6b3JuaWdcIixcclxuICBcInp1ZnJpZWRlblwiLFxyXG4gIFwienVnZW5laWd0XCIsXHJcbiAgXCJ6dWdld2FuZHRcIixcclxuICBcInp1dHJhdWxpY2hcIixcclxuICBcInp1dmVyc2ljaHRsaWNoXCIsXHJcbiAgXCJ6d2VpZmVsbmRcIixcclxuICBcInp5bmlzY2hcIlxyXG5dO1xyXG5cclxuY29uc3QgZ2VmdWVobEFuZ2VuZWhtID0gW1xyXG4gIFwiYWNodHNhbVwiLFxyXG4gIFwiYWt6ZXB0aWVyZW5kXCIsXHJcbiAgXCJhbmdlcmVndFwiLFxyXG4gIFwiYXVmZ2VkcmVodFwiLFxyXG4gIFwiYXVmZ2VyZWd0XCIsXHJcbiAgXCJhdXNnZWdsaWNoZW5cIixcclxuICBcImF1c2dlbGFzc2VuXCIsXHJcbiAgXCJiZWVpbmRydWNrdFwiLFxyXG4gIFwiYmVmbMO8Z2VsdFwiLFxyXG4gIFwiYmVmcmVpdFwiLFxyXG4gIFwiYmVmcmllZGlndFwiLFxyXG4gIFwiYmVnZWlzdGVydFwiLFxyXG4gIFwiYmVnaWVyaWdcIixcclxuICBcImJlaGFnbGljaFwiLFxyXG4gIFwiYmVsZWJ0XCIsXHJcbiAgXCJiZWx1c3RpZ3RcIixcclxuICBcImJlcmF1c2NodFwiLFxyXG4gIFwiYmVyZWl0XCIsXHJcbiAgXCJiZXJ1aGlndFwiLFxyXG4gIFwiYmVyw7xocnRcIixcclxuICBcImJlc2Nod2luZ3RcIixcclxuICBcImJlc2VlbHRcIixcclxuICBcImJld2VndFwiLFxyXG4gIFwiYmV3dW5kZXJuZFwiLFxyXG4gIFwiYmV6YXViZXJ0XCIsXHJcbiAgXCJkYW5rYmFyXCIsXHJcbiAgXCJlaWZyaWdcIixcclxuICBcImVuZXJnaWVnZWxhZGVuXCIsXHJcbiAgXCJlbmVyZ2lzY2hcIixcclxuICBcImVuZ2FnaWVydFwiLFxyXG4gIFwiZW50aHVzaWFzdGlzY2hcIixcclxuICBcImVudGxhc3RldFwiLFxyXG4gIFwiZW50c2NobG9zc2VuXCIsXHJcbiAgXCJlbnRzcGFubnRcIixcclxuICBcImVudHrDvGNrdFwiLFxyXG4gIFwiZXJmcmV1dFwiLFxyXG4gIFwiZXJmcmlzY2h0XCIsXHJcbiAgXCJlcmbDvGxsdFwiLFxyXG4gIFwiZXJncmlmZmVuXCIsXHJcbiAgXCJlcmhlaXRlcnRcIixcclxuICBcImVybGVpY2h0ZXJ0XCIsXHJcbiAgXCJlcmxldWNodGV0XCIsXHJcbiAgXCJlcm11bnRlcnRcIixcclxuICBcImVybXV0aWd0XCIsXHJcbiAgXCJlcnJlZ3RcIixcclxuICBcImVyc3RhdW50XCIsXHJcbiAgXCJlcndhcnR1bmdzdm9sbFwiLFxyXG4gIFwiZmFzemluaWVydFwiLFxyXG4gIFwiZmVpbnNpbm5pZ1wiLFxyXG4gIFwiZnJlaVwiLFxyXG4gIFwiZnJldWVuXCIsXHJcbiAgXCJmcmllZGxpY2hcIixcclxuICBcImZyb2hcIixcclxuICBcImZyw7ZobGljaFwiLFxyXG4gIFwiZ2ViYW5udFwiLFxyXG4gIFwiZ2Vib3JnZW5cIixcclxuICBcImdlZHVsZGlnXCIsXHJcbiAgXCJnZWZhc3N0XCIsXHJcbiAgXCJnZWZlc3NlbHRcIixcclxuICBcImdlbGFzc2VuXCIsXHJcbiAgXCJnZW3DvHRsaWNoXCIsXHJcbiAgXCJnZXLDvGhydFwiLFxyXG4gIFwiZ2VzY2jDvHR6dFwiLFxyXG4gIFwiZ2VzcGFubnRcIixcclxuICBcImdsw7xja2xpY2hcIixcclxuICBcImdsw7xja3NlbGlnXCIsXHJcbiAgXCJnw7x0aWdcIixcclxuICBcImhlaXRlclwiLFxyXG4gIFwiaGVsbHdhY2hcIixcclxuICBcImhlcnpsaWNoXCIsXHJcbiAgXCJoaW5nZXJpc3NlblwiLFxyXG4gIFwiaG9jaGVyZnJldXRcIixcclxuICBcImhvZmZudW5nc3ZvbGxcIixcclxuICBcImluc3BpcmllcnRcIixcclxuICBcImludGVyZXNzaWVydFwiLFxyXG4gIFwia2xhclwiLFxyXG4gIFwia3JhZnR2b2xsXCIsXHJcbiAgXCJsZWJlbmRpZ1wiLFxyXG4gIFwibGViaGFmdFwiLFxyXG4gIFwibGVpY2h0XCIsXHJcbiAgXCJsaWViZXZvbGxcIixcclxuICBcImxvY2tlclwiLFxyXG4gIFwibHVzdGlnXCIsXHJcbiAgXCJsdXN0dm9sbFwiLFxyXG4gIFwibW90aXZpZXJ0XCIsXHJcbiAgXCJtdW50ZXJcIixcclxuICBcIm11dGlnXCIsXHJcbiAgXCJuZXVnaWVyaWdcIixcclxuICBcIm9mZmVuXCIsXHJcbiAgXCJvcHRpbWlzdGlzY2hcIixcclxuICBcInJlc3Bla3R2b2xsXCIsXHJcbiAgXCJydWhpZ1wiLFxyXG4gIFwic2F0dFwiLFxyXG4gIFwic2Nod3VuZ3ZvbGxcIixcclxuICBcInNlbGJzdHNpY2hlclwiLFxyXG4gIFwic2VsaWdcIixcclxuICBcInNlbnNpYmVsXCIsXHJcbiAgXCJzaWNoZXJcIixcclxuICBcInNvcmdlbmZyZWlcIixcclxuICBcInNvcmdsb3NcIixcclxuICBcInN0aWxsXCIsXHJcbiAgXCJzdG9selwiLFxyXG4gIFwic3RyZXNzZnJlaVwiLFxyXG4gIFwidGFwZmVyXCIsXHJcbiAgXCJ0YXRrcsOkZnRpZ1wiLFxyXG4gIFwiw7xiZXJnbMO8Y2tsaWNoXCIsXHJcbiAgXCLDvGJlcm3DvHRpZ1wiLFxyXG4gIFwiw7xiZXJyYXNjaHRcIixcclxuICBcIsO8YmVyc2Now6R1bWVuZFwiLFxyXG4gIFwiw7xiZXJzY2h3w6RuZ2xpY2hcIixcclxuICBcIsO8YmVyd8OkbHRpZ3RcIixcclxuICBcInVuYmVrw7xtbWVydFwiLFxyXG4gIFwidW5iZXNjaHdlcnRcIixcclxuICBcInVuZXJzY2jDvHR0ZXJsaWNoXCIsXHJcbiAgXCJ2ZXJibMO8ZmZ0XCIsXHJcbiAgXCJ2ZXJnbsO8Z3RcIixcclxuICBcInZlcmxpZWJ0XCIsXHJcbiAgXCJ2ZXJzcGllbHRcIixcclxuICBcInZlcnRyYXVlbmRcIixcclxuICBcInZlcnRyYXVlbnN2b2xsXCIsXHJcbiAgXCJ2ZXJ3dW5kZXJ0XCIsXHJcbiAgXCJ2ZXJ6YXViZXJ0XCIsXHJcbiAgXCJ2ZXJ6w7xja3RcIixcclxuICBcInZvbGxlciBWb3JmcmV1ZGVcIixcclxuICBcIndhY2hcIixcclxuICBcIndhcm1oZXJ6aWdcIixcclxuICBcIndpc3NiZWdpZXJpZ1wiLFxyXG4gIFwid29obFwiLFxyXG4gIFwiesOkcnRsaWNoXCIsXHJcbiAgXCJ6dWZyaWVkZW5cIixcclxuICBcInp1Z2VuZWlndFwiLFxyXG4gIFwienVnZXdhbmR0XCIsXHJcbiAgXCJ6dXRyYXVsaWNoXCIsXHJcbiAgXCJ6dXZlcnNpY2h0bGljaFwiXHJcbl07XHJcblxyXG5jb25zdCBrb2VycGVydGVpbCA9IFtcclxuICBcIkFjaHNlbFwiLFxyXG4gIFwiQXJtXCIsXHJcbiAgXCJBdWdlXCIsXHJcbiAgXCJBdWdlbmxpZFwiLFxyXG4gIFwiQmFja2UvV2FuZ2VcIixcclxuICBcIkJhdWNoXCIsXHJcbiAgXCJCZWluXCIsXHJcbiAgXCJCcnVzdFwiLFxyXG4gIFwiQnVzZW5cIixcclxuICBcIkRhdW1lblwiLFxyXG4gIFwiRWxsYm9nZW4vRWxsZW5ib2dlblwiLFxyXG4gIFwiRmVyc2VcIixcclxuICBcIkZpbmdlclwiLFxyXG4gIFwiRnVzc1wiLFxyXG4gIFwiR2F1bWVuXCIsXHJcbiAgXCJHZXPDpHNzXCIsXHJcbiAgXCJIYWxzXCIsXHJcbiAgXCJIYW5kXCIsXHJcbiAgXCJIYXVwdFwiLFxyXG4gIFwiSMO8ZnRlXCIsXHJcbiAgXCJLaW5uXCIsXHJcbiAgXCJLbmllXCIsXHJcbiAgXCJLb3BmXCIsXHJcbiAgXCJMZWJlclwiLFxyXG4gIFwiTGlwcGVcIixcclxuICBcIkx1ZnRyw7ZocmVcIixcclxuICBcIkx1bmdlXCIsXHJcbiAgXCJNdW5kXCIsXHJcbiAgXCJOYXNlXCIsXHJcbiAgXCJOaWVyZVwiLFxyXG4gIFwiT2JlcmFybVwiLFxyXG4gIFwiT2JlcnNjaGVua2VsXCIsXHJcbiAgXCJPaHJcIixcclxuICBcIlLDvGNrZW5cIixcclxuICBcIlNjaHVsdGVyXCIsXHJcbiAgXCJTdGlyblwiLFxyXG4gIFwiVW50ZXJhcm1cIixcclxuICBcIlVudGVyc2NoZW5rZWxcIixcclxuICBcIldhZGVcIixcclxuICBcIlphaG5cIixcclxuICBcIlplaGVcIixcclxuICBcIlp1bmdlXCJcclxuXTtcclxuXHJcbmNvbnN0IHRpZXIgPSBbXHJcbiAgXCJBYWxcIixcclxuICBcIkFkbGVyXCIsXHJcbiAgXCJBZmZlXCIsXHJcbiAgXCJBZnJpa2FuaXNjaGVyIFdpbGRodW5kXCIsXHJcbiAgXCJBbGJhdHJvc1wiLFxyXG4gIFwiQWxsaWdhdG9yXCIsXHJcbiAgXCJBbWVpc2VcIixcclxuICBcIkFtZWlzZW5iw6RyXCIsXHJcbiAgXCJCw6RyXCIsXHJcbiAgXCJCZW9cIixcclxuICBcIkJpYmVyXCIsXHJcbiAgXCJCaWVuZVwiLFxyXG4gIFwiQmlzb25cIixcclxuICBcIkJsdXRlZ2VsXCIsXHJcbiAgXCJCb2FcIixcclxuICBcIkJyYXVuYsOkclwiLFxyXG4gIFwiQ2hhbcOkbGVvblwiLFxyXG4gIFwiQ2xvd25maXNjaFwiLFxyXG4gIFwiRGFjaHNcIixcclxuICBcIkRlbGZpblwiLFxyXG4gIFwiRGlub3NhdXJpZXJcIixcclxuICBcIkRvZG9cIixcclxuICBcIkVjaHNlXCIsXHJcbiAgXCJFaWNoaMO2cm5jaGVuXCIsXHJcbiAgXCJFaWRlY2hzZVwiLFxyXG4gIFwiRWlzYsOkclwiLFxyXG4gIFwiRWxjaGVcIixcclxuICBcIkVsZWZhbnRcIixcclxuICBcIkVudGVcIixcclxuICBcIkVyZGZlcmtlbFwiLFxyXG4gIFwiRXJkbcOkbm5jaGVuXCIsXHJcbiAgXCJFc2VsXCIsXHJcbiAgXCJFdWxlXCIsXHJcbiAgXCJGYXVsdGllclwiLFxyXG4gIFwiRmVsZGhhc2VcIixcclxuICBcIkZlbGRtYXVzXCIsXHJcbiAgXCJGaXNjaFwiLFxyXG4gIFwiRmxhbWluZ29cIixcclxuICBcIkZsZWRlcm1hdXNcIixcclxuICBcIkZsaWVnZVwiLFxyXG4gIFwiRmxpZWdlbmRlciBGaXNjaFwiLFxyXG4gIFwiRmx1Z2h1bmRcIixcclxuICBcIkZsdXNzcGZlcmRcIixcclxuICBcIkZyZXR0Y2hlblwiLFxyXG4gIFwiRnJvc2NoXCIsXHJcbiAgXCJGdWNoc1wiLFxyXG4gIFwiR2Fuc1wiLFxyXG4gIFwiR2F6ZWxsZVwiLFxyXG4gIFwiR2VpZXJcIixcclxuICBcIkdlcGFydFwiLFxyXG4gIFwiR2lyYWZmZVwiLFxyXG4gIFwiR29sZGZpc2NoXCIsXHJcbiAgXCJHb3JpbGxhXCIsXHJcbiAgXCJHb3R0ZXNhbmJldGVyaW5cIixcclxuICBcIkdyYXNow7xwZmVyXCIsXHJcbiAgXCJHcmF1cGFwYWdlaVwiLFxyXG4gIFwiR8O8cnRlbHRpZXJcIixcclxuICBcIkhhaG5cIixcclxuICBcIkhhaVwiLFxyXG4gIFwiSGFtc3RlclwiLFxyXG4gIFwiSGFzZVwiLFxyXG4gIFwiSGF1c21hdXNcIixcclxuICBcIkhhdXNyaW5kXCIsXHJcbiAgXCJIZXJtZWxpblwiLFxyXG4gIFwiSGlyc2NoXCIsXHJcbiAgXCJIb3JuaXNzZVwiLFxyXG4gIFwiSHVoblwiLFxyXG4gIFwiSHVtbWVyXCIsXHJcbiAgXCJIdW5kXCIsXHJcbiAgXCJIdXNreVwiLFxyXG4gIFwiSHnDpG5lXCIsXHJcbiAgXCJJZ2VsXCIsXHJcbiAgXCJJZ2VsZmlzY2hcIixcclxuICBcIkphcGFuaXNjaGUgUmllc2Vua3JhYmJlXCIsXHJcbiAgXCJLw6RmZXJcIixcclxuICBcIkthbWVsXCIsXHJcbiAgXCJLw6RuZ3VydVwiLFxyXG4gIFwiS2FuaW5jaGVuXCIsXHJcbiAgXCJLYXJwZmVuXCIsXHJcbiAgXCJLYXR6ZVwiLFxyXG4gIFwiS29hbGFcIixcclxuICBcIktvam90ZVwiLFxyXG4gIFwiS29uZG9yXCIsXHJcbiAgXCJLcsOkaGVcIixcclxuICBcIktyYWtlXCIsXHJcbiAgXCJLcmFuaWNoXCIsXHJcbiAgXCJLcmVic1wiLFxyXG4gIFwiS3Jva29kaWxcIixcclxuICBcIktyw7Z0ZVwiLFxyXG4gIFwiS8O8Y2hlbnNjaGFiZVwiLFxyXG4gIFwiS3VoXCIsXHJcbiAgXCJMYWNoZW5lciBIYW5zXCIsXHJcbiAgXCJMYW1hXCIsXHJcbiAgXCJMYXViZnJvc2NoXCIsXHJcbiAgXCJMYXVzXCIsXHJcbiAgXCJMZWd1YW5cIixcclxuICBcIkxlbW1pbmdcIixcclxuICBcIkxlb3BhcmRcIixcclxuICBcIkzDtndlXCIsXHJcbiAgXCJMdWNoc1wiLFxyXG4gIFwiTWFtbXV0XCIsXHJcbiAgXCJNYXJpZW5rw6RmZXJcIixcclxuICBcIk1hdWx0aWVyXCIsXHJcbiAgXCJNYXVsd3VyZlwiLFxyXG4gIFwiTWF1c1wiLFxyXG4gIFwiTWVlcnNjaHdlaW5cIixcclxuICBcIk1laXNlXCIsXHJcbiAgXCJNZXJpbm9zY2hhZlwiLFxyXG4gIFwiTWlsYW5cIixcclxuICBcIk1pbGJlXCIsXHJcbiAgXCJNb2xjaFwiLFxyXG4gIFwiTXVuZ29cIixcclxuICBcIk11cm1lbHRpZXJcIixcclxuICBcIk5hY2t0bXVsbFwiLFxyXG4gIFwiTmFzaG9yblwiLFxyXG4gIFwiTmlscGZlcmRcIixcclxuICBcIk9rdG9wdXNzZVwiLFxyXG4gIFwiT3Bvc3N1bVwiLFxyXG4gIFwiT3JhbmctVXRhblwiLFxyXG4gIFwiT3R0ZXJcIixcclxuICBcIlBhbmRhXCIsXHJcbiAgXCJQYW50aGVyXCIsXHJcbiAgXCJQYXBhZ2VpXCIsXHJcbiAgXCJQYXZpYW5cIixcclxuICBcIlBlbGlrYW5cIixcclxuICBcIlBmYXVcIixcclxuICBcIlBmZXJkXCIsXHJcbiAgXCJQaW5ndWluXCIsXHJcbiAgXCJQaXJhbmhhXCIsXHJcbiAgXCJQcsOkcmllaHVuZFwiLFxyXG4gIFwiUXVhbGxlXCIsXHJcbiAgXCJSYWJlXCIsXHJcbiAgXCJSYXR0ZVwiLFxyXG4gIFwiUmF1cGVcIixcclxuICBcIlJlZ2Vud3VybVwiLFxyXG4gIFwiUmVoXCIsXHJcbiAgXCJSZWloZXJcIixcclxuICBcIlJlbnRpZXJcIixcclxuICBcIlJvYmJlXCIsXHJcbiAgXCJSb2NoZVwiLFxyXG4gIFwiU8OkYmVsemFobnRpZ2VyXCIsXHJcbiAgXCJTYWxhbWFuZGVyXCIsXHJcbiAgXCJTY2hhYmVcIixcclxuICBcIlNjaGFmXCIsXHJcbiAgXCJTY2hha2FsZVwiLFxyXG4gIFwiU2NoaWxka3LDtnRlXCIsXHJcbiAgXCJTY2hpbXBhbnNlXCIsXHJcbiAgXCJTY2hsYW5nZVwiLFxyXG4gIFwiU2NobWV0dGVybGluZ1wiLFxyXG4gIFwiU2NobmFiZWxiYXJzY2hcIixcclxuICBcIlNjaG5hYmVsdGllclwiLFxyXG4gIFwiU2NobmVja2VcIixcclxuICBcIlNjaG5lZWV1bGVcIixcclxuICBcIlNjaHdhbW1cIixcclxuICBcIlNjaHdhblwiLFxyXG4gIFwiU2Nod2VpblwiLFxyXG4gIFwiU2Nod2VydHdhbC9PcmNhXCIsXHJcbiAgXCJTZWVodW5kXCIsXHJcbiAgXCJTZWVsw7Z3ZVwiLFxyXG4gIFwiU2VlcGZlcmRjaGVuXCIsXHJcbiAgXCJTZWVzdGVyblwiLFxyXG4gIFwiU2VldGV1ZmVsXCIsXHJcbiAgXCJTaWJpcmlzY2hlciBUaWdlclwiLFxyXG4gIFwiU2llYmVuc2NobMOkZmVyXCIsXHJcbiAgXCJTa29ycGlvblwiLFxyXG4gIFwiU3BhdHpcIixcclxuICBcIlNwZWNodFwiLFxyXG4gIFwiU3Bpbm5lXCIsXHJcbiAgXCJTcmktTGFua2EtRWxlZmFudFwiLFxyXG4gIFwiU3RhY2hlbHNjaHdlaW5cIixcclxuICBcIlN0ZWluYm9ja1wiLFxyXG4gIFwiU3RpZXJcIixcclxuICBcIlN0aW5rdGllclwiLFxyXG4gIFwiU3RvcmNoXCIsXHJcbiAgXCJTdHJhdXNzXCIsXHJcbiAgXCJTdHJlaWZlbmjDtnJuY2hlblwiLFxyXG4gIFwiVGFwaXJcIixcclxuICBcIlRhdWJlXCIsXHJcbiAgXCJUYXVzZW5kZsO8c3NsZXJcIixcclxuICBcIlRlcm1pdGVuXCIsXHJcbiAgXCJUaWdlclwiLFxyXG4gIFwiVGludGVuZmlzY2hcIixcclxuICBcIlRvdGVua29wZsOkZmZjaGVuXCIsXHJcbiAgXCJVaHVcIixcclxuICBcIlZvZ2VsXCIsXHJcbiAgXCJWb2dlbHNwaW5uZVwiLFxyXG4gIFwiV2FsXCIsXHJcbiAgXCJXYWxyb3NzXCIsXHJcbiAgXCJXYW56ZW5cIixcclxuICBcIldhcmFuZVwiLFxyXG4gIFwiV2FyemVuc2Nod2VpblwiLFxyXG4gIFwiV2FzY2hiw6RyXCIsXHJcbiAgXCJXZWluYmVyZ3NjaG5lY2tlXCIsXHJcbiAgXCJXZWlzc3N0b3JjaFwiLFxyXG4gIFwiV2VsbGVuc2l0dGljaFwiLFxyXG4gIFwiV2lkZGVyXCIsXHJcbiAgXCJXaWVzZWxcIixcclxuICBcIldpbGRzY2h3ZWluXCIsXHJcbiAgXCJXb2xmXCIsXHJcbiAgXCJXdXJtXCIsXHJcbiAgXCJXw7xzdGVubWF1c1wiLFxyXG4gIFwiV8O8c3RlbnJlbm5tYXVzXCIsXHJcbiAgXCJaZWJyYVwiLFxyXG4gIFwiWmVja2VcIixcclxuICBcIlppZWdlXCIsXHJcbiAgXCJaaXR0ZXJhYWxcIlxyXG5dO1xyXG5cclxuY29uc3QgZmFiZWx3ZXNlbiA9IFtcclxuICBcIkJpZ2Zvb3RcIixcclxuICBcIkTDpG1vblwiLFxyXG4gIFwiRHJhY2hlXCIsXHJcbiAgXCJFaWVybGVnZW5kZSBXb2xsbWlsY2hzYXVcIixcclxuICBcIkVpbmhvcm5cIixcclxuICBcIkVsZmVcIixcclxuICBcIkZlZVwiLFxyXG4gIFwiRmxhc2NoZW5nZWlzdFwiLFxyXG4gIFwiR2VzcGVuc3RcIixcclxuICBcIkdub21cIixcclxuICBcIkdvZHppbGxhXCIsXHJcbiAgXCJIZWluemVsbcOkbm5jaGVuXCIsXHJcbiAgXCJIZXhlXCIsXHJcbiAgXCJLb2JvbGRcIixcclxuICBcIk1lZXJqdW5nZnJhdVwiLFxyXG4gIFwiTXVtaWVcIixcclxuICBcIk9ya1wiLFxyXG4gIFwiT3N0ZXJoYXNlXCIsXHJcbiAgXCJQZWdhc3VzXCIsXHJcbiAgXCJQaMO2bml4XCIsXHJcbiAgXCJQb2x0ZXJnZWlzdFwiLFxyXG4gIFwiUmllc2VcIixcclxuICBcIlNhbmRtYW5uXCIsXHJcbiAgXCJTY2hsdW1wZlwiLFxyXG4gIFwiU3BoaW54XCIsXHJcbiAgXCJTaXJlbmVcIixcclxuICBcIlRpdGFuXCIsXHJcbiAgXCJUcm9sbFwiLFxyXG4gIFwiVmFtcGlyXCIsXHJcbiAgXCJXZWlobmFjaHRzbWFublwiLFxyXG4gIFwiV2Vyd29sZlwiLFxyXG4gIFwiWWV0aVwiLFxyXG4gIFwiWmFobmZlZVwiLFxyXG4gIFwiWmF1YmVyZXJcIixcclxuICBcIlpvbWJpZVwiLFxyXG4gIFwiWndlcmdcIlxyXG5dO1xyXG5cclxuY29uc3QgcGhvYmllID0gW1xyXG4gIFwiQXZpb3Bob3BpZSAoRmx1Z2FuZ3N0KVwiLFxyXG4gIFwiQW51cHRhcGhvYmllIChBbmdzdCBhbGxlaW5zdGVoZW5kIHp1IGJsZWliZW4pXCIsXHJcbiAgXCJLbGF1c3Ryb3Bob2JpZSAoQW5nc3Qgdm9yIGVuZ2VuIFLDpHVtZW4pXCIsXHJcbiAgXCJBZ29yYXBob2JpZSAoQW5nc3Qgdm9yIGZyZWllbiBncm9zc2VuIFBsw6R0emVuKVwiLFxyXG4gIFwiQXJhY2hub3Bob2JpZSAoQW5nc3Qgdm9yIFNwaW5uZW4pXCIsXHJcbiAgXCJIZXJwZXRvcGhvYmllIChBbmdzdCB2b3IgS3JpZWNodGllcmVuKVwiLFxyXG4gIFwiSGlwcG9wb3RvbW9uc3Ryb3Nlc3F1aXBwZWRhbGlvcGhvYmllIChBbmdzdCB2b3IgbGFuZ2VuIFfDtnJ0ZXJuIDstKSAoZWlnZW50bGljaDogU2VzcXVpcGVkYWxvcGhvYmllKVwiLFxyXG4gIFwiQ2FsaWd5bmVwaG9iaWUgKEFuZ3N0IHZvciBzY2jDtm5lbiBGcmF1ZW4pXCIsXHJcbiAgXCJHZW5vcGhvYmllIChBbmdzdCB2b3IgTGllYmUvTsOkaGUpXCIsXHJcbiAgXCJEZW50b3Bob2JpZSAoQW5nc3Qgdm9yIGRlbSBaYWhuYXJ6dClcIixcclxuICBcIkNoYWV0b3Bob2JpZSAoQW5nc3Qgdm9yIEhhYXJlbilcIixcclxuICBcIk15c29waG9iaWUgKEFuZ3N0IHZvciBVbnNhdWJlcmtlaXQvQmFrdGVyaWVuL0tyYW5raGVpdGVuKVwiLFxyXG4gIFwiR2VwaHlyb3Bob2JpZSAoQnLDvGNrZW4genUgw7xiZXJxdWVyZW4pXCIsXHJcbiAgXCJFcnl0aHJvcGhvYmllIChBbmdzdCB2b3IgZGVtIEVycsO2dGVuKVwiLFxyXG4gIFwiRHlzbW9ycGhvcGhvYmllIChBbmdzdCB2b3IgZGVyIEjDpHNzbGljaGtlaXQgZGVzIGVpZ2VuZW4gR2VzaWNodHMgb2RlciBLw7ZycGVycylcIixcclxuICBcIkFrcm9waG9iaWUgKEjDtmhlbmFuZ3N0IG9kZXIgSMO2aGVuc2Nod2luZGVsKVwiLFxyXG4gIFwiS2VyYXVub3Bob2JpZSAoQW5nc3Qgdm9yIERvbm5lcilcIixcclxuICBcIkVsZWt0cm9waG9iaWUgKEFuZ3N0IHZvciBFbGVrdHJvZ2Vyw6R0ZW4pXCIsXHJcbiAgXCJOeWt0b3Bob2JpZSAoQW5nc3Qgdm9yIGRlciBEdW5rZWxoZWl0IG9kZXIgTmFjaHQpXCIsXHJcbiAgXCJBc3RyYXBob2JpZSAoQW5nc3Qgdm9yIEJsaXR6ZW4pXCIsXHJcbiAgXCJQaG9ib3Bob2JpZSAoQW5nc3QgZWluZSBQaG9iaWUgenUgZXJsZWlkZW4pXCJcclxuXTtcclxuXHJcbmNvbnN0IG9ydCA9IFtcclxuICBcIk1lc3Nlc3RhbmRcIixcclxuICBcIk11Y2tpYnVkZS9GaXRuZXNzc3R1ZGlvXCIsXHJcbiAgXCJOYWdlbHN0dWRpb1wiLFxyXG4gIFwiU2NobGFjaHRlcmVpXCIsXHJcbiAgXCJTY2h1bGVcIixcclxuICBcIlNvbm5lbnN0dWRpb1wiLFxyXG4gIFwiU3RldWVyYmVyYXRlcmthbnpsZWlcIixcclxuICBcIlN1cGVybWFya3RcIixcclxuICBcIldhc2Noc2Fsb25cIixcclxuICBcIldlcmJlYWdlbnR1clwiLFxyXG4gIFwiV8O8cnN0Y2hlbmJ1ZGVcIixcclxuICBcIlphaG5hcnp0XCIsXHJcbiAgXCJab29mYWNoZ2VzY2jDpGZ0XCIsXHJcbiAgXCJad2VpdGhhYXJzdHVkaW9cIixcclxuICBcIkFyZ2VudGluaWVuXCIsXHJcbiAgXCJBdXN0cmFsaWVuXCIsXHJcbiAgXCJCZWxnaWVuXCIsXHJcbiAgXCJEZXV0c2NobGFuZFwiLFxyXG4gIFwiRnJhbmtyZWljaFwiLFxyXG4gIFwiSXRhbGllblwiLFxyXG4gIFwiSmFwYW5cIixcclxuICBcIk1leGljb1wiLFxyXG4gIFwiTmllZGVybGFuZGVcIixcclxuICBcIsOWc3RlcnJlaWNoXCIsXHJcbiAgXCJSdXNzbGFuZFwiLFxyXG4gIFwiU2Nod2VpelwiLFxyXG4gIFwiU3BhbmllblwiLFxyXG4gIFwiVVNBXCIsXHJcbiAgXCJCZXJnLCBCZXJnZ2lwZmVsXCIsXHJcbiAgXCJHZWJpcmdlXCIsXHJcbiAgXCJHbGV0c2NoZXJcIixcclxuICBcIldhbGRcIixcclxuICBcIlNlZSAoU3RhdXNlZSwgQmFnZ2Vyc2VlKVwiLFxyXG4gIFwiU3RlcHBlXCIsXHJcbiAgXCJTdHJhbmRcIixcclxuICBcIlN1bXBmXCIsXHJcbiAgXCJXaWVzZVwiLFxyXG4gIFwiV8O8c3RlXCIsXHJcbiAgXCJIw7ZobGVcIixcclxuICBcIlBhcmtcIixcclxuICBcImltL2FtIEZsdXNzXCIsXHJcbiAgXCJ1bnRlciBXYXNzZXIgKE1lZXIsIEZsdXNzKSwgVGllZnNlZVwiLFxyXG4gIFwiUmVnZW53YWxkXCIsXHJcbiAgXCJEc2NodW5nZWxcIixcclxuICBcIkhvY2hnZWJpcmdlXCIsXHJcbiAgXCJPYXNlXCIsXHJcbiAgXCJCZXJnd2llc2VcIixcclxuICBcIldhdHRcIixcclxuICBcImVpbnNhbWUgSW5zZWxcIixcclxuICBcIk1vb3JcIixcclxuICBcIlNhdmFubmVcIixcclxuICBcIldhc3NlcmZhbGxcIixcclxuICBcImltIElycmdhcnRlblwiLFxyXG4gIFwiQmlibGlvdGhla1wiLFxyXG4gIFwiRWlud29obmVybWVsZGVhbXRcIixcclxuICBcIktpbm9cIixcclxuICBcIktvbnplcnRzYWFsXCIsXHJcbiAgXCJUaGVhdGVyXCIsXHJcbiAgXCJQcmF4aXNcIixcclxuICBcIlN0YW5kZXNhbXRcIixcclxuICBcIktGWi1adWxhc3N1bmdzc3RlbGxlXCIsXHJcbiAgXCJNdXNldW1cIixcclxuICBcIkFyYmVpdHN6aW1tZXJcIixcclxuICBcIkJhZGV6aW1tZXJcIixcclxuICBcIkJlc2Vua2FtbWVyXCIsXHJcbiAgXCJIb2JieXJhdW1cIixcclxuICBcIktpbmRlcnppbW1lclwiLFxyXG4gIFwiU2NobGFmemltbWVyXCIsXHJcbiAgXCJXb2huemltbWVyXCIsXHJcbiAgXCJLw7xjaGVcIixcclxuICBcIkdhcmFnZVwiLFxyXG4gIFwiYmVnZWhiYXJlciBTY2hyYW5rXCIsXHJcbiAgXCJBYnN0ZWxscmF1bVwiLFxyXG4gIFwiTXVzaWt6aW1tZXJcIixcclxuICBcIkfDpHN0ZXppbW1lclwiLFxyXG4gIFwiU3BlaXNla2FtbWVyXCIsXHJcbiAgXCJLZWxsZXJcIixcclxuICBcIkRhY2hib2RlblwiLFxyXG4gIFwiQW5rbGVpZGV6aW1tZXJcIixcclxuICBcIkthbWluemltbWVyXCIsXHJcbiAgXCJCYWxrb25cIixcclxuICBcIkdhcnRlbmhhdXNcIixcclxuICBcIldHIEvDvGNoZVwiLFxyXG4gIFwiU3BlaXNlemltbWVyXCIsXHJcbiAgXCJIYXVzaGFsdHNyYXVtXCIsXHJcbiAgXCJNb25kLCBQbGFuZXRlblwiLFxyXG4gIFwiSGltbWVsXCIsXHJcbiAgXCJIw7ZsbGVcIixcclxuICBcIlBhcmFkaWVzXCIsXHJcbiAgXCJSYXVtc2NoaWZmXCIsXHJcbiAgXCJSYXVtc3RhdGlvblwiLFxyXG4gIFwiU3B1a3NjaGxvc3NcIixcclxuICBcImltIG1lbnNjaGxpY2hlbSBLw7ZycGVyXCIsXHJcbiAgXCJmbGllZ2VuZGVyIFRlcHBpY2hcIixcclxuICBcIlplaXRtYXNjaGluZVwiLFxyXG4gIFwiTWlrcm9rb3Ntb3NcIixcclxuICBcIk9seW1wXCIsXHJcbiAgXCJBdG9tKG1vZGVsbCkgdW5kIE1vbGVrw7xsKG1vZGVsbClcIixcclxuICBcIlNhbG9vblwiLFxyXG4gIFwiR2VzaW5kZXppbW1lclwiLFxyXG4gIFwiSMO2aGxlIHZvbiBVcm1lbnNjaGVuXCIsXHJcbiAgXCJyw7ZtaXNjaGVyL2dyaWVjaGlzY2hlciAuLi4gTWFya3RwbGF0elwiLFxyXG4gIFwiUml0dGVyYnVyZ1wiLFxyXG4gIFwiQXRsYW50aXNcIixcclxuICBcIkxpbWVzXCIsXHJcbiAgXCJUdXJtIHZvbiBCYWJlbFwiLFxyXG4gIFwiRm9sdGVya2FtbWVyXCIsXHJcbiAgXCJQeXJhbWlkZSAoei5CLiBpbiBHcmFia2FtbWVyKVwiLFxyXG4gIFwidm9yIGRlbSBTdGFkdHRvclwiLFxyXG4gIFwiU2Now7x0emVuZ3JhYmVuXCIsXHJcbiAgXCJUcsO8bW1lcmdydW5kc3TDvGNrXCIsXHJcbiAgXCJTY2hsYWNodGZlbGRcIixcclxuICBcIkJ1bmtlclwiLFxyXG4gIFwiaW0gU2Fya29waGFnXCIsXHJcbiAgXCJTY2hpZmYvVS1Cb290IChkcmF1ZiBvZGVyIGRyaW5uZW4pXCIsXHJcbiAgXCJLcmV1emZhaHJ0c2NoaWZmXCIsXHJcbiAgXCJGaXNjaGt1dHRlclwiLFxyXG4gIFwiRmx1Z3pldWdcIixcclxuICBcIkF1dG8sIExLVywgQnVzXCIsXHJcbiAgXCJXb2hud2FnZW4sIFdvaG5tb2JpbFwiLFxyXG4gIFwiTW90b3JyYWRcIixcclxuICBcIlp1Z1wiLFxyXG4gIFwiU2VpbGJhaG5cIixcclxuICBcIkt1dHNjaGVcIixcclxuICBcIkZhaHJzdHVobFwiLFxyXG4gIFwiWmVwcGVsaW5cIixcclxuICBcIkJhbGxvbmtvcmJcIixcclxuICBcIlN0cmFzc2VuYmFoblwiLFxyXG4gIFwiQnVzXCIsXHJcbiAgXCJhdWYgZGVyIEthbm9uZW5rdWdlbFwiLFxyXG4gIFwiYXVmIGRlbSBQZmVyZFwiLFxyXG4gIFwidW50ZXIgZGVyIEJyw7xja2VcIixcclxuICBcImF1ZiBkZXIgQnLDvGNrZVwiLFxyXG4gIFwiS3JlbWF0b3JpdW1cIixcclxuICBcIkZyaWVkaG9mXCIsXHJcbiAgXCJLaXJtZXMtL0phaHJtYXJrdHNnZXLDpHQgKHouQi4gUmllc2VucmFkLCBHZWlzdGVyYmFobilcIixcclxuICBcIlRlbGVmb256ZWxsZVwiLFxyXG4gIFwiV2VpaG5hY2h0c21hcmt0XCIsXHJcbiAgXCJWZXJrZWhyc8O8YnVuZ3NwbGF0elwiLFxyXG4gIFwiQmF1bXNjaHVsZVwiLFxyXG4gIFwiaW0gZ2VnbmVyaXNjaGVuIFN0cmFmcmF1bVwiLFxyXG4gIFwiU2FuYXRvcml1bVwiLFxyXG4gIFwiWm9vXCIsXHJcbiAgXCJaaXJrdXNcIixcclxuICBcImF1ZiBkZW0gSmFrb2Jzd2VnXCIsXHJcbiAgXCJhdWYgZGVtIExhdWZzdGVnXCIsXHJcbiAgXCJPcmNoZXN0ZXJncmFiZW5cIixcclxuICBcIlp1LVNww6R0LUtvbW1lci1Mb2dlIGltIFRoZWF0ZXJcIlxyXG5dO1xyXG5cclxuY29uc3QgZ2ViYWV1ZGUgPSBbXHJcbiAgXCJBdXNzaWNodHN0dXJtXCIsXHJcbiAgXCJCYXVlcm5oYXVzXCIsXHJcbiAgXCJHZXNjaMOkZnRcIixcclxuICBcIkhvY2hoYXVzXCIsXHJcbiAgXCJIw7xobmVyc3RhbGxcIixcclxuICBcIkthc2VybmVcIixcclxuICBcIktpcmNoZS9LYXBlbGxlL0thdGhlZHJhbGVcIixcclxuICBcIktsb3N0ZXJcIixcclxuICBcIktyYW5rZW5oYXVzIChPUCwgS3JlaXNzYWFsLCBOb3RhdWZuYWhtZSwgU8OkdWdsaW5nc3RhdGlvbiwgUsO2bnRnZW5yYXVtLCBHaXBzcmF1bSlcIixcclxuICBcIlBvbGl6ZWlzdGF0aW9uIChBdXNuw7xjaHRlcnVuZ3N6ZWxsZSlcIixcclxuICBcIlJhdGhhdXNcIixcclxuICBcIldvbGtlbmtyYXR6ZXJcIixcclxuICBcIlN0YWRpb25cIixcclxuICBcIlB5cmFtaWRlXCIsXHJcbiAgXCJHZWbDpG5nbmlzXCIsXHJcbiAgXCJFaXNzdGF0aW9uXCIsXHJcbiAgXCJFaWZmZWx0dXJtXCIsXHJcbiAgXCJGb3JzdGhhdXNcIixcclxuICBcIkFud2FsdHNrYW56bGVpXCIsXHJcbiAgXCJCYXVtYXJrdFwiLFxyXG4gIFwiQmV0cmllYnN2ZXJzYW1tbHVuZ1wiLFxyXG4gIFwiQm9yZGVsbFwiLFxyXG4gIFwiQsO8cm9cIixcclxuICBcIkNoZWZzZWtyZXRhcmlhdFwiLFxyXG4gIFwiRmFicmlrIChGbGllc3NiYW5kKVwiLFxyXG4gIFwiRnJpc2V1clwiLFxyXG4gIFwiR3Jvc3NyYXVtYsO8cm9cIixcclxuICBcIkhhZmVuXCIsXHJcbiAgXCJJbnRlcm5ldGNhZmVcIixcclxuICBcIkthbnRpbmVcIixcclxuICBcIktpZWZlcm9ydGhvcMOkZGVcIixcclxuICBcIktpbmRlcmdhcnRlblwiLFxyXG4gIFwiTWFya3RoYWxsZVwiLFxyXG4gIFwiTWFya3RwbGF0elwiLFxyXG4gIFwiTWFzc2FnZXByYXhpc1wiLFxyXG4gIFwiTWVzc2VzdGFuZFwiLFxyXG4gIFwiTXVja2lidWRlL0ZpdG5lc3NzdHVkaW9cIixcclxuICBcIk5hZ2Vsc3R1ZGlvXCIsXHJcbiAgXCJTY2hsYWNodGVyZWlcIixcclxuICBcIlNjaHVsZVwiLFxyXG4gIFwiU29ubmVuc3R1ZGlvXCIsXHJcbiAgXCJTdGV1ZXJiZXJhdGVya2FuemxlaVwiLFxyXG4gIFwiU3VwZXJtYXJrdFwiLFxyXG4gIFwiV2FzY2hzYWxvblwiLFxyXG4gIFwiV2VyYmVhZ2VudHVyXCIsXHJcbiAgXCJXw7xyc3RjaGVuYnVkZVwiLFxyXG4gIFwiWmFobmFyenRcIixcclxuICBcIlpvb2ZhY2hnZXNjaMOkZnRcIixcclxuICBcIlp3ZWl0aGFhcnN0dWRpb1wiXHJcbl07XHJcblxyXG5jb25zdCBsYW5kID0gW1xyXG4gIFwiQXJnZW50aW5pZW5cIixcclxuICBcIkF1c3RyYWxpZW5cIixcclxuICBcIkJlbGdpZW5cIixcclxuICBcIkRldXRzY2hsYW5kXCIsXHJcbiAgXCJGcmFua3JlaWNoXCIsXHJcbiAgXCJJdGFsaWVuXCIsXHJcbiAgXCJKYXBhblwiLFxyXG4gIFwiTWV4aWNvXCIsXHJcbiAgXCJOaWVkZXJsYW5kZVwiLFxyXG4gIFwiw5ZzdGVycmVpY2hcIixcclxuICBcIlJ1c3NsYW5kXCIsXHJcbiAgXCJTY2h3ZWl6XCIsXHJcbiAgXCJTcGFuaWVuXCIsXHJcbiAgXCJVU0FcIlxyXG5dO1xyXG5cclxuY29uc3QgcmF1bSA9IFtcclxuICBcIkJpYmxpb3RoZWtcIixcclxuICBcIkVpbndvaG5lcm1lbGRlYW10XCIsXHJcbiAgXCJLaW5vXCIsXHJcbiAgXCJLb256ZXJ0c2FhbFwiLFxyXG4gIFwiVGhlYXRlclwiLFxyXG4gIFwiUHJheGlzXCIsXHJcbiAgXCJTdGFuZGVzYW10XCIsXHJcbiAgXCJLRlotWnVsYXNzdW5nc3N0ZWxsZVwiLFxyXG4gIFwiTXVzZXVtXCIsXHJcbiAgXCJBcmJlaXRzemltbWVyXCIsXHJcbiAgXCJCYWRlemltbWVyXCIsXHJcbiAgXCJCZXNlbmthbW1lclwiLFxyXG4gIFwiSG9iYnlyYXVtXCIsXHJcbiAgXCJLaW5kZXJ6aW1tZXJcIixcclxuICBcIlNjaGxhZnppbW1lclwiLFxyXG4gIFwiV29obnppbW1lclwiLFxyXG4gIFwiS8O8Y2hlXCIsXHJcbiAgXCJHYXJhZ2VcIixcclxuICBcImJlZ2VoYmFyZXIgU2NocmFua1wiLFxyXG4gIFwiQWJzdGVsbHJhdW1cIixcclxuICBcIk11c2lremltbWVyXCIsXHJcbiAgXCJHw6RzdGV6aW1tZXJcIixcclxuICBcIlNwZWlzZWthbW1lclwiLFxyXG4gIFwiS2VsbGVyXCIsXHJcbiAgXCJEYWNoYm9kZW5cIixcclxuICBcIkFua2xlaWRlemltbWVyXCIsXHJcbiAgXCJLYW1pbnppbW1lclwiLFxyXG4gIFwiQmFsa29uXCIsXHJcbiAgXCJHYXJ0ZW5oYXVzXCIsXHJcbiAgXCJXRyBLw7xjaGVcIixcclxuICBcIlNwZWlzZXppbW1lclwiLFxyXG4gIFwiSGF1c2hhbHRzcmF1bVwiXHJcbl07XHJcblxyXG5jb25zdCBmb3J0YmV3ZWd1bmdzbWl0dGVsID0gW1xyXG4gIFwiU2NoaWZmL1UtQm9vdCAoZHJhdWYgb2RlciBkcmlubmVuKVwiLFxyXG4gIFwiS3JldXpmYWhydHNjaGlmZlwiLFxyXG4gIFwiRmlzY2hrdXR0ZXJcIixcclxuICBcIkZsdWd6ZXVnXCIsXHJcbiAgXCJBdXRvLCBMS1csIEJ1c1wiLFxyXG4gIFwiV29obndhZ2VuLCBXb2hubW9iaWxcIixcclxuICBcIk1vdG9ycmFkXCIsXHJcbiAgXCJadWdcIixcclxuICBcIlNlaWxiYWhuXCIsXHJcbiAgXCJLdXRzY2hlXCIsXHJcbiAgXCJGYWhyc3R1aGxcIixcclxuICBcIlplcHBlbGluXCIsXHJcbiAgXCJCYWxsb25rb3JiXCIsXHJcbiAgXCJTdHJhc3NlbmJhaG5cIixcclxuICBcIkJ1c1wiLFxyXG4gIFwiYXVmIGRlciBLYW5vbmVua3VnZWxcIixcclxuICBcImF1ZiBkZW0gUGZlcmRcIlxyXG5dO1xyXG5cclxuY29uc3Qgcm91dGluZSA9IFtcclxuICBcIlRhcGV6aWVyZW5cIixcclxuICBcIlN0cmVpY2hlbiAoV8OkbmRlLCBGZW5zdGVyKVwiLFxyXG4gIFwiQsO8Z2VsblwiLFxyXG4gIFwiV8Okc2NoZSBhdWZow6RuZ2VuXCIsXHJcbiAgXCJCaWVyIHphcGZlbiwgRmxhc2NoZW4gw7ZmZm5lbiB1w6QuIFRoZWtlbnTDpHRpZ2tlaXRlblwiLFxyXG4gIFwiTWVkaXRpZXJlbiAoaW0gU2NobmVpZGVyc2l0eiBzaXR6ZW4pXCIsXHJcbiAgXCJGZXJuc2VoZW4gKHNpdHplbmQgYXVmIGVpbmVuIFB1bmt0IHN0YXJyZW4sIG1pdCBIaWxmZSBkZXIgRmVybmJlZGllbnVuZyB6YXBwZW4pXCIsXHJcbiAgXCJLb2NoZW4gKFp1dGF0ZW4gaGluenVmw7xnZW4sIEhpdHplIGVpbnN0ZWxsZW4sIFVtcsO8aHJlbiwgV8O8cnplbiB1c3cuKVwiLFxyXG4gIFwiVMO2cGZlcm4gdW5kIGV0d2FzIFJ1bmRlcyBmb3JtZW4gYW4gZWluZXIgZHJlaGVuZGVuIFTDtnBmZXJzY2hlaWJlXCIsXHJcbiAgXCJhbSBDb21wdXRlciAoLWJpbGRzY2hpcm0pIGFyYmVpdGVuIHVuZCBUYXN0YXR1ciBiZWRpZW5lblwiLFxyXG4gIFwiYWt0aXYgYW0gRml0bmVzc2dlcsOkdCBzZWluXCIsXHJcbiAgXCJCb2RlbiB3aXNjaGVuIG9kZXIgZmVnZW5cIixcclxuICBcIkZlbnN0ZXIgcHV0emVuXCIsXHJcbiAgXCJGZWdlblwiLFxyXG4gIFwiQmV0ZW4gKEtpcmNoZSlcIixcclxuICBcIkhvbHogaGFja2VuXCIsXHJcbiAgXCJTw6RnZW5cIixcclxuICBcIkF1dG8gZmFocmVuIChMZW5rZW4sIFNjaGFsdGVuKVwiLFxyXG4gIFwiR2FydGVuYXJiZWl0IChVbmtyYXV0IHp1cGZlbiwgRWlucGZsYW56ZW4sIEVybnRlbiwgUmFzZW4gbcOkaGVuKVwiLFxyXG4gIFwiQmx1bWVuIGdpZXNzZW5cIixcclxuICBcIlNjaHdpbW1lblwiLFxyXG4gIFwiTGVpdGVyIGhvY2hzdGVpZ2VuXCIsXHJcbiAgXCJNdXNpemllcmVuLCB6LkIuIEtsYXZpZXIsIEdpdGFycmUsIEdlaWdlIHNwaWVsZW5cIixcclxuICBcIkVpbiBCaWxkIG1hbGVuIG9kZXIgamVtYW5kZW4gcG9ydHLDpHRpZXJlblwiLFxyXG4gIFwiU3BvcnQgdHJlaWJlbiwgei5CLiBEYXJ0LCAoVGlzY2gtKVRlbm5pcywgKE1pbmktKUdvbGZcIixcclxuICBcIkR1c2NoZW4gb2RlciBCYWRlblwiLFxyXG4gIFwiTsOkaGVuLCBTdHJpY2tlbiwgSMOka2VsblwiLFxyXG4gIFwiSMOkbmRld2FzY2hlblwiLFxyXG4gIFwiWsOkaG5lIHB1dHplblwiLFxyXG4gIFwiTsOkZ2VsIHNjaG5laWRlbiBvZGVyIExhY2tpZXJlblwiLFxyXG4gIFwiWmlnYXJldHRlIGFuesO8bmRlbiB1bmQgcmF1Y2hlblwiLFxyXG4gIFwiR2V0csOkbmsgZWluc2NoZW5rZW4gdW5kIHRyaW5rZW5cIixcclxuICBcIkdlc2NoaXJyIHNww7xsZW5cIixcclxuICBcInNpY2ggc29ubmVuIChtaXQgSGFuZHR1Y2ggYXVzYnJlaXRlbiwgRWluY3JlbWVuKVwiLFxyXG4gIFwiYW0gRmxpZXNzYmFuZCBhcmJlaXRlblwiLFxyXG4gIFwiaGFuZHdlcmtsaWNoIGFyYmVpdGVuICh6LkIuIFNjaHVoIGJlc29obGVuKVwiXHJcbl07XHJcblxyXG5jb25zdCBnZW5yZUZlcm5zZWggPSBbXHJcbiAgXCJBYmVudGV1ZXJmaWxtXCIsXHJcbiAgXCJBY3Rpb25maWxtXCIsXHJcbiAgXCJBZGVsc3JvbWFuemVcIixcclxuICBcIkFtYXRldXJmaWxtXCIsXHJcbiAgXCJCZXJnZmlsbSAvIEJlcmdzdGVpZ2VyZHJhbWFcIixcclxuICBcIkJpYmVsZmlsbSAvIFNhbmRhbGVuZmlsbVwiLFxyXG4gIFwiQm9sbHl3b29kIEZpbG0gLyBJbmRpc2NoZSBMaWViZXNmaWxtZVwiLFxyXG4gIFwiRG9nbWEgKG1pdCB2ZXJ3YWNrZWx0ZXIgSGFuZGthbWVyYVwiLFxyXG4gIFwiRWFzdGVybiAvIEt1bmcgRnVcIixcclxuICBcIkVyb3Rpa2ZpbG1cIixcclxuICBcIkZhbnRhc3lcIixcclxuICBcIkZhc3NiaW5kZXItRmlsbWVcIixcclxuICBcIkZpbG0gTm9pciAvIEZhbnrDtnNpc2NoZXIgRmlsbSBkZXIgNTBlciBKYWhyZVwiLFxyXG4gIFwiSGVpbWF0ZmlsbVwiLFxyXG4gIFwiSGlzdG9yaWVuZmlsbVwiLFxyXG4gIFwiSG9ycm9yZmlsbSAvIFpvbWJpZWZpbG0gLyBLZXR0ZW5zw6RnZW1hc3Nha2VyXCIsXHJcbiAgXCJIb3Jyb3Jrb23DtmRpZVwiLFxyXG4gIFwiS2F0YXN0cm9waGVuZmlsbSAvIEZsdWd6ZXVna2F0YXN0cm9waGUgLyBXZWx0dW50ZXJnYW5ncyBTemVuYXJpb1wiLFxyXG4gIFwiS2luZGVyZmlsbVwiLFxyXG4gIFwiS29tw7ZkaWVcIixcclxuICBcIktyaWVnc2ZpbG1cIixcclxuICBcIktyaW1pbmFsZmlsbVwiLFxyXG4gIFwiTGllYmVzZmlsbVwiLFxyXG4gIFwiTWFudGVsIHVuZCBEZWdlbiAvIERyZWkgTXVza2V0aWVyZVwiLFxyXG4gIFwiTcOkcmNoZW5cIixcclxuICBcIk1hcnRpYWwgQXJ0XCIsXHJcbiAgXCJNZWxvZHJhbVwiLFxyXG4gIFwiTWlsaWV1c3R1ZGllXCIsXHJcbiAgXCJNb251bWVudGFsZmlsbVwiLFxyXG4gIFwiTW9uc3RlcmZpbG0gLyBHb3ppbGxhIC8gS2luZyBLb25nXCIsXHJcbiAgXCJNdXNpay1GaWxtXCIsXHJcbiAgXCJQaXJhdGVuZmlsbVwiLFxyXG4gIFwiUG9ybm8gKFNvZnRjb3JlL0hhcmRjb3JlKVwiLFxyXG4gIFwiUm9hZG1vdmllXCIsXHJcbiAgXCJTYW5kYWxlbmVwb3NcIixcclxuICBcIlNjaWVuY2UgRmljdGlvbiwgV2VsdHJhdW1lcG9zLCBCZWdlZ251bmcgbWl0IEF1c3NlcmlyZGlzY2hlblwiLFxyXG4gIFwiU3Bpb25hZ2U6IEphbWVzIEJvbmQgMDA3OyBEZXIgU3Bpb24gZGVyIGF1cyBkZXIgS8OkbHRlIGthbSwg4oCmXCIsXHJcbiAgXCJTZXggLSBLb23DtmRpZVwiLFxyXG4gIFwiU2xhcHN0aWNrXCIsXHJcbiAgXCJTcGxhdHRlclwiLFxyXG4gIFwiU3Bpb25hZ2VmaWxtXCIsXHJcbiAgXCJTdHVtbWZpbG1cIixcclxuICBcIlN1cGVyaGVsZGVuIC0gU3VwZXJtYW5uLCBCYXRtYW4gdW5kIGFuZGVyZSBDb21pY3ZvcmxhZ2VuXCIsXHJcbiAgXCJUZWVuYWdlciAtIEtvbcO2ZGllXCIsXHJcbiAgXCJUaHJpbGxlclwiLFxyXG4gIFwiVHJhZ8O2ZGllXCIsXHJcbiAgXCJUcmFnaWtvbcO2ZGllXCIsXHJcbiAgXCJWYW1waXJmaWxtXCIsXHJcbiAgXCJXZXN0ZXJuOsKgV2VzdGVybiwgSXRhbG93ZXN0ZXJuIChTcGFnaGV0dGktV2VzdGVybiksIFdlc3Rlcm4gS29tw7ZkaWVcIixcclxuICBcIlplaWNoZW50cmljayAvQ29taWMgLyBNYW5nYVwiLFxyXG4gIFwiQXJ6dHNlcmllXCIsXHJcbiAgXCJCZXJhdHVuZ3NzZW5kdW5nOiBNZWRpemluaXNjaGUgVGhlbWVuXCIsXHJcbiAgXCJEb2t1c29hcDogQXVzd2FuZGVyZXIsIEtpbmRlcmVyemllaHVuZywgSGF1cyBlaW5yaWNodGVuXCIsXHJcbiAgXCJHZXJpY2h0c3NlbmR1bmdcIixcclxuICBcIkdvdHRlc2RpZW5zdCwgRmVybnNlaHByZWRpZ2VyXCIsXHJcbiAgXCJHcmFuZCBQcml4IGQnRXVyb3Zpc2lvblwiLFxyXG4gIFwiSGl0cGFyYWRlXCIsXHJcbiAgXCJJbmZvdGFpbm1lbnRcIixcclxuICBcIktpbmRlcnNlbmR1bmcgKFNlc2Ftc3RyYXNzZSwgU2VuZHVuZyBtaXQgZGVyIE1hdXMpXCIsXHJcbiAgXCJLb2Noc2hvd1wiLFxyXG4gIFwiS29tw7ZkaWVuc3RhZGxcIixcclxuICBcIkt1bHR1cnNlbmR1bmcgLyBBcnRlXCIsXHJcbiAgXCJLdW5zdCB1bmQgS3JlbXBlbCAoQW50aXF1aXTDpHRlbiBFeHBlcnRlbiBiZXJhdGVuKVwiLFxyXG4gIFwiTXVzaWthbnRlbnN0YWRsXCIsXHJcbiAgXCJOYWNocmljaHRlbnNlbmR1bmcgKFRhZ2Vzc2NoYXUpXCIsXHJcbiAgXCJSZWFsaXR5LVRWXCIsXHJcbiAgXCJSZWlzZS0gLyBTdMOkZHRlbWFnYXppblwiLFxyXG4gIFwiUmVwb3J0YWdlXCIsXHJcbiAgXCJTaXRjb21cIixcclxuICBcIlNvYXAsIFNlaWZlbm9wZXJcIixcclxuICBcIlNwb3J0OiBTcG9ydHNjaGF1LCBMaXZlLcOcYmVydHJhZ3VuZ1wiLFxyXG4gIFwiU3ByYWNoa3Vyc1wiLFxyXG4gIFwiR2VucmUgVGFsa3Nob3dcIixcclxuICBcIlRlbGVrb2xsZWdcIixcclxuICBcIkdlbnJlIFRlbGVzaG9wIChEYXVlcndlcmJlc2VuZHVuZylcIixcclxuICBcIlRpZXJkb2t1XCIsXHJcbiAgXCJWZXJrZWhyc2VyemllaHVuZ3NzcG90czogRGVyIDcuIFNpbm5cIixcclxuICBcIldhaGxzdHVkaW9cIixcclxuICBcIldhaGx3ZXJidW5nXCIsXHJcbiAgXCJXZXJidW5nIHVuZCBNYWluemVsbcOkbm5jaGVuXCIsXHJcbiAgXCJXZXR0ZXJiZXJpY2h0XCIsXHJcbiAgXCJXaXNvIC8gUG9saXRpayB1bmQgV2lydHNjaGFmdFwiLFxyXG4gIFwiV2lzc2Vuc2NoYWZ0XCIsXHJcbiAgXCJXaXNzZW5zY2hhZnRzc2hvd1wiLFxyXG4gIFwiV29ydCBhbSBTb25udGFnXCIsXHJcbiAgXCJYWSBVbmdlbMO2c3RcIlxyXG5dO1xyXG5cclxuY29uc3QgZ2VucmVNdXNpayA9IFtcclxuICBcIkdyZWdvcmlhbmlzY2hlIEdlc8OkbmdlXCIsXHJcbiAgXCJNaXR0ZWxhbHRlcmxpY2hlIE11c2lrXCIsXHJcbiAgXCJLaXJjaGVubXVzaWsgLyBPcmdlbCB1bmQgQ29yYWxcIixcclxuICBcIk1vcml0YXRlbnPDpG5nZXIgLyBNaW5uZXPDpG5nZXJcIixcclxuICBcIlNhdWYtIC8gU3R1ZGVudGVubGllZFwiLFxyXG4gIFwiTGllYmVzbGllZCAvIGRlcmJlIExpZWRlclwiLFxyXG4gIFwiU3R1bW1maWxtIC8gUmFndGltZVwiLFxyXG4gIFwiT3BlciAoc2llaGUgVGhlYXRlcilcIixcclxuICBcIkt1bnN0bGllZCAvIFPDpG5nZXIgdW5kIEtsYXZpZXIgKFNjaHViZXJ0KVwiLFxyXG4gIFwiMTIgVG9uIE11c2lrIC8gYXRvbmFsZSBNdXNpayAoZWluZmFjaCBzY2hyw6RnIHNpbmdlbiEpXCIsXHJcbiAgXCJNaW5pbWFsIE11c2lrXCIsXHJcbiAgXCJBbWJpZW50IChWaWVsIE11c2lrIHdlbmlnIEdlc2FuZylcIixcclxuICBcIkl0YWxpZW5pc2NoZXMgQmVsbCBDYW50byAoUGF2YXJvdHRpKVwiLFxyXG4gIFwiY2hpbmVzaXNjaGUgT3Blci9NdXNpa1wiLFxyXG4gIFwiT3BlcmV0dGVcIixcclxuICBcIk11c2ljYWxcIixcclxuICBcIkphenogLyBKYXp6YmFsYWRlIC8gSmF6enNvbmcgKFN0YW5kYXJkKVwiLFxyXG4gIFwiRGl4aWVsYW5kIC8gTG91aXMgQW1zdHJvbmdcIixcclxuICBcIkxhdGluIEphenogLyBCb3NzYSBOb3ZhXCIsXHJcbiAgXCJFbGVrdHJpayBKYXp6IC8gUm9jayBKYXp6XCIsXHJcbiAgXCJGcmVlIEphenogLyBBcmNoaSBTaGVwcFwiLFxyXG4gIFwiUHVuayBKYXp6IC8gc2VociBoZWZ0aWdlcyBTY2hsYWd6ZXVnLCBHZXNhbmcgd2llIGJlaSBQdW5rXCIsXHJcbiAgXCJTYWxzYSAvIE1lcmVuZ2VcIixcclxuICBcIkFmcmlrYW5pc2NoZXIgUG9wIC8gTS4gTWFrZWJhXCIsXHJcbiAgXCJSZWdnYWVcIixcclxuICBcIkNvdW50cnkgJiBXZXN0ZXJuXCIsXHJcbiAgXCJIaWxseSBCaWxseVwiLFxyXG4gIFwiTW90b3duXCIsXHJcbiAgXCJTb3VsXCIsXHJcbiAgXCJHZW5yZSBHb3NwZWxcIixcclxuICBcIlNpbmdlciAmIFNvbmd3cml0ZXJcIixcclxuICBcIkxpZWRlcm1hY2hlclwiLFxyXG4gIFwiQ2hhbnNvbiAvIENhbnpvbmlcIixcclxuICBcIlZvbGtzbXVzaWsgKGF1Y2ggYXXDn2VyZXVyb3DDpGlzY2gpXCIsXHJcbiAgXCJJcmlzaCBGb2xrXCIsXHJcbiAgXCJCYXVjaHRhbnptdXNpa1wiLFxyXG4gIFwia2xhc3Npc2NoZSBjaGluZXNpc2NoZSBNdXNpa1wiLFxyXG4gIFwiSW5kaWFuZXJ0YW56IC8gU2NoYW1hbmFuZW50YW56XCIsXHJcbiAgXCJBZnJpa2FuaXNjaGUgTXVzaWsgKFRyb21tZWxuLCBWb3Jzw6RuZ2VyIHVuZCBLZWhycmVpbSlcIixcclxuICBcIk9iZXJ0b25nZXNhbmdcIixcclxuICBcIkpvZGVsblwiLFxyXG4gIFwiR3N0YW56bCAoQmF5ZXJpc2NoZXMgQ291cGzDqSBudXIgZsO8ciBFaW5nZXdlaWh0ZSlcIixcclxuICBcIkthYmFyZXR0IExpZWRcIixcclxuICBcIkNvdXBsw6kgLyBTcG90dGxpZWRcIixcclxuICBcIlNvemlhbGlzdGlzY2hlcyBBcmJlaXRlcmxpZWRcIixcclxuICBcIlZvbGtzdMO8bWxpY2hlIE11c2lrIChNdXNpa2FudGVuc3RhZGwpXCIsXHJcbiAgXCJHZW5yZSBTY2hsYWdlclwiLFxyXG4gIFwiUm9ja1wiLFxyXG4gIFwiSGFyZCBSb2NrXCIsXHJcbiAgXCJEZWF0aCBNZXRhbFwiLFxyXG4gIFwiSGVhdnkgTWV0YWxcIixcclxuICBcIlB1bmtcIixcclxuICBcIk5ldWUgRGV1dHNjaGUgV2VsbGVcIixcclxuICBcIlRlY2hubyAvIEVsZWt0cm9uaXNjaGUgTXVzaWtcIixcclxuICBcIlJhcFwiLFxyXG4gIFwiR2VucmUgSGlwIEhvcFwiLFxyXG4gIFwiQSBDYXBlbGxhIC8gQSBDYXBlbGxhIEluc3RydW1lbnRhbFwiLFxyXG4gIFwiS2luZGVybGllZFwiXHJcbl07XHJcblxyXG5jb25zdCBiZXppZWh1bmcgPSBbXHJcbiAgXCJFaGVwYWFyXCIsXHJcbiAgXCJWYXRlci9LaW5kXCIsXHJcbiAgXCJNdXR0ZXIvS2luZFwiLFxyXG4gIFwiU2Nod2llZ2VybXV0dGVyIHVuZCBTY2h3aWVnZXJ0b2NodGVyL1NvaG4gby7DpC5cIixcclxuICBcIkdlc2Nod2lzdGVyXCIsXHJcbiAgXCJHcm9zc2VsdGVybiB1bmQgRW5rZWxcIixcclxuICBcIlN0aWVmZWx0ZXJuL1N0aWVma2luZFwiLFxyXG4gIFwiUGF0Y2h3b3JrLUZhbWlsaWVcIixcclxuICBcIkVoZXBhYXJcIixcclxuICBcIlByb3N0aXR1aWVydGUgdW5kIEZyZWllclwiLFxyXG4gIFwiQWx0ZXJuZGVyIExpZWJoYWJlclwiLFxyXG4gIFwiRXJ3aXNjaHRlciBHZWxpZWJ0ZXJcIixcclxuICBcIkRyZWllY2tzdmVyaMOkbHRuaXNcIixcclxuICBcIkVyc3RlIFZlcmFicmVkdW5nXCIsXHJcbiAgXCJTY2h3dWxlcyBQw6RyY2hlblwiLFxyXG4gIFwiRXgtRnJhdSB1bmQgbmV1ZSBGcmF1XCIsXHJcbiAgXCJFeC1NYW5uIHVuZCBuZXVlciBNYW5uXCIsXHJcbiAgXCJMZWhyZXIgdW5kIFNjaMO8bGVyXCIsXHJcbiAgXCJMZWhyZXIgdW5kIFNjaHVsbGVpdGVyXCIsXHJcbiAgXCJMZWhyZXIgdW5kIEVsdGVyblwiLFxyXG4gIFwiU2Now7xsZXIgdW5kIEdhbmdcIixcclxuICBcIlZlcnLDvGNrdGVyIFByb2Zlc3NvclwiLFxyXG4gIFwiQXVzYmlsZHVuZ3NvZmZpemllciB1bmQgUmVrcnV0XCIsXHJcbiAgXCJXw6RjaHRlciB1bmQgR2VmYW5nZW5lclwiLFxyXG4gIFwiUmVjaHRzYW53YWx0IHVuZCBLbGllbnRcIixcclxuICBcIlJpY2h0ZXIgdW5kIFJlY2h0c2Fud2FsdFwiLFxyXG4gIFwiS3JpbWluYWxrb21taXNzYXIgdW5kIEdhbm92ZS9WZXJicmVjaGVyXCIsXHJcbiAgXCJBdXRvYmFobnBvbGl6aXN0IHVuZCBBdXRvZmFocmVyXCIsXHJcbiAgXCJTaGVyaWZmIHVuZCBHYW5nc3RlcmJhbmRlXCIsXHJcbiAgXCJWZXJrZWhyc3BvbGl6aXN0IHVuZCBUZW1wb3PDvG5kZXIgKGF1Y2ggS27DtmxsY2hlbnZlcnRlaWxlciB1bmQgRmFsc2NocGFya2VyKVwiLFxyXG4gIFwiVGVycm9yaXN0IHVuZCBHZWlzZWxcIixcclxuICBcIkFuZ2VrbGFndGVyIHVuZCBSaWNodGVyXCIsXHJcbiAgXCJQc3ljaG9wYXRoIHVuZCBPcGZlclwiLFxyXG4gIFwiRmlsbS9Qb3BzdGFyIHVuZCBGYW5cIixcclxuICBcIlNjaGF1c3BpZWxlciB1bmQgUmVnaXNzZXVyXCIsXHJcbiAgXCJSZWdpc3NldXIgdW5kIFByb2R1emVudFwiLFxyXG4gIFwiU2NoYXVzcGllbGVyIHVuZCBTdHVudC1Eb3VibGVcIixcclxuICBcIlNwZXJtaXVtIHVuZCBFaXplbGxlXCIsXHJcbiAgXCJYLUNocm9tb3NvbSB1bmQgWS1DaHJvbW9zb21cIixcclxuICBcIkJsdXR6ZWxsZSB1bmQgQmFrdGVyaXVtXCIsXHJcbiAgXCJQQyB1bmQgQmVudXR6ZXJcIixcclxuICBcIkZyw7xjaHRlIGluIGRlciBPYnN0c2NoYWxlXCIsXHJcbiAgXCJSb2JvdGVyIHVuZCBzZWluIFNjaMO2cGZlclwiLFxyXG4gIFwiS2luZCB1bmQgU3BpZWx6ZXVnL1B1cHBlXCIsXHJcbiAgXCJCYXVjaHJlZG5lciB1bmQgUHVwcGVcIixcclxuICBcIlphaG5zdG9jaGVyIHVuZCBaYWhuL0dlYmlzc1wiLFxyXG4gIFwiNS1FdXJvLVNjaGVpbiB1bmQgMTAwLUV1cm8tU2NoZWluXCIsXHJcbiAgXCJIdW5kIHVuZCBLbm9jaGVuXCIsXHJcbiAgXCJSYXR0ZSB1bmQgTGFib3J3aXNzZW5zY2hhZnRsZXJcIixcclxuICBcIkZpc2NoIHVuZCBkZXIgV3VybSBhbSBIYWtlblwiLFxyXG4gIFwiRnJvc2NoIHVuZCBQcmluemVzc2luXCIsXHJcbiAgXCJQcsOkcGFyYXRvciB1bmQgVGllclwiLFxyXG4gIFwiSGVycmNoZW4vRnJhdWNoZW4vS2luZCB1bmQgSGF1c3RpZXJcIixcclxuICBcIihzY2hsZWNodGVzKSBHZXdpc3NlbiB1bmQgKHp1Z2Vow7ZyaWdlcikgTWVuc2NoXCIsXHJcbiAgXCJHb3R0IHVuZCBNZW5zY2hcIixcclxuICBcIkdvdHQgdW5kIFRldWZlbFwiLFxyXG4gIFwiQnVkZGhhIHVuZCBDaHJpc3R1c1wiLFxyXG4gIFwiRMOkbW9uIHVuZCBFbmdlbFwiLFxyXG4gIFwiQWxpY2UgdW5kIGRhcyB3ZWlzc2UgS2FuaW5jaGVuXCIsXHJcbiAgXCJBc3Ryb25hdXQgdW5kIEF1c3NlcmlyZGlzY2hlclwiLFxyXG4gIFwiU2VlbGUgdW5kIFBlcnNvblwiLFxyXG4gIFwiRXJzdGUgQmVnZWdudW5nIChNZW5zY2ggdW5kIEF1c3NlcmlyZGlzY2hlcilcIixcclxuICBcIid3ZWlzc2UgTcOkdXNlJyB1bmQgZGllIFBlcnNvbiwgZGllIGhhbGx1emluaWVydFwiLFxyXG4gIFwiTWVuc2NoIHVuZCBTcGllZ2VsYmlsZFwiLFxyXG4gIFwiUGVyc29uIHVuZCBlaW5nZWJpbGRldGVyIEZyZXVuZCAoei5CLiBIYXJ2ZXkpXCIsXHJcbiAgXCJLYXBpdMOkbiB1bmQgR2Vpc3RcIixcclxuICBcInJvbWFudGlzY2hlciBNYW5uIHVuZCBkaWUgQmx1bWVuLCBkaWUgZXIgbWl0IHNpY2ggdHLDpGd0XCIsXHJcbiAgXCJUb3Rlbmdyw6RiZXIgdW5kIEdlaXN0L0xlaWNoZVwiLFxyXG4gIFwiQ293Ym95IHVuZCBJbmRpYW5lclwiLFxyXG4gIFwiUsOkdWJlciB1bmQgR2VuZGFybVwiLFxyXG4gIFwiQmF0bWFuIHVuZCBSb2JpblwiLFxyXG4gIFwiS2FzcGVyIHVuZCBTZXBwZWwvR3Jvc3NtdXR0ZXIvS3Jva29kaWwuLi5cIixcclxuICBcIkJpZyBCcm90aGVyIHVuZCBLYW5kaWRhdFwiLFxyXG4gIFwiS2FuZGlkYXQgdW5kIFF1aXpzaG93bWFzdGVyXCIsXHJcbiAgXCJQaWxvdCB1bmQgQ3Jldy9QYXNzYWdpZXJlL1N0ZXdhcmRlc3MuLi5cIixcclxuICBcIkNoZWYgdW5kIE1pdGFyYmVpdGVyL1Nla3JldMOkcmluXCIsXHJcbiAgXCJQcsOkc2lkZW50IHVuZCBLYWJpbmV0dCAoaW5zYi4gaW4gS3JpZWdzemVpdGVuKVwiLFxyXG4gIFwiUG9saXRpa2VyIHVuZCBXw6RobGVyXCIsXHJcbiAgXCJCdWNoaGFsdGVyIHVuZCBHZXNjaMOkZnRzbWFubi9GcmF1XCIsXHJcbiAgXCJWb3JhcmJlaXRlciB1bmQgQXJiZWl0c2tvbG9ubmVcIixcclxuICBcIkZhYnJpa2FyYmVpdGVyIHVuZCBLb256ZXJuY2hlZlwiLFxyXG4gIFwiSGVyciB1bmQgRGllbmVyL0RpZW5zdG3DpGRjaGVuXCIsXHJcbiAgXCJEZWtvcmF0ZXVyL0ZlbmctU2h1aS1CZXJhdGVyIHVuZCBXb2hudW5nc2VpZ2VudMO8bWVyXCIsXHJcbiAgXCJCb3h0cmFpbmVyIHVuZCBCb3hlciAoYXVjaCBmw7xyIGFuZGVyZSBTcG9ydGFydGVuKVwiLFxyXG4gIFwiUsOkdWJlci9Nw7ZyZGVyIHVuZCBzZWluIGJlc3RlciBGcmV1bmRcIixcclxuICBcIldhZmZlbmjDpG5kbGVyIHVuZCBQYXppZmlzdFwiLFxyXG4gIFwiQ3JvdXBpZXIgdW5kIFJvdWxldHRlc3BpZWxlclwiLFxyXG4gIFwiQXJ6dCB1bmQgUGF0aWVudC9LcmFua2Vuc2Nod2VzdGVyXCIsXHJcbiAgXCJQc3ljaGlhdGVyIHVuZCBQYXRpZW50XCIsXHJcbiAgXCJUaWVyYXJ6dCB1bmQgUGF0aWVudC9CZXNpdHplciBkZXMgVGllcnNcIixcclxuICBcIlfDpHJ0ZXIgdW5kIFBzeWNoaXNjaCBLcmFua2VyXCIsXHJcbiAgXCJBc3Npc3Rlbnphcnp0IHVuZCBDaGVmYXJ6dFwiLFxyXG4gIFwiU2Now7ZuaGVpdHNjaGlydXJnIHVuZCBhbHRlcm5kZXMgVG9wbW9kZWxcIixcclxuICBcIlBhcHN0IHVuZCBLYXJkaW5hbFwiLFxyXG4gIFwiUHJpZXN0ZXIgdW5kIEdlbWVpbmRlbWl0Z2xpZWRcIixcclxuICBcIlByaWVzdGVyIHVuZCBNZXNzZGllbmVyXCIsXHJcbiAgXCJHdXJ1IHVuZCBKw7xuZ2VyXCIsXHJcbiAgXCJLZWxsbmVyIHVuZCBHYXN0XCIsXHJcbiAgXCJWZXJrw6R1ZmVyIHVuZCBLdW5kZVwiLFxyXG4gIFwiVGF4aWZhaHJlciB1bmQgS3VuZGVcIixcclxuICBcIk1hc3NzY2huZWlkZXIgdW5kIEt1bmRlXCIsXHJcbiAgXCJGcmlzZXVyIHVuZCBLdW5kZVwiLFxyXG4gIFwiQXV0b21lY2hhbmlrZXIgdW5kIEF1dG9iZXNpdHplclwiLFxyXG4gIFwiQnVzL1UtQmFobi1GYWhyZXIgdW5kIEZhaHJnYXN0XCIsXHJcbiAgXCJUb3Rlbmdyw6RiZXIgdW50ZXIgc2ljaCAuLi5cIixcclxuICBcIk1pdGFyYmVpdGVyIGRlciBFaW53YW5kZXJ1bmdzYmVow7ZyZGUgdW5kIEVpbndhbmRlcmVyIC4uLlwiLFxyXG4gIFwiTWNEb25hbGRzLU1hbmFnZXIgdW5kICfDlmtva3JpZWdlcidcIixcclxuICBcIkhlcnIgdW5kIFNrbGF2ZVwiLFxyXG4gIFwiRnJldW5kZSBhdXMgZGVyIEtpbmRoZWl0LCBkaWUgc2ljaCB3aWVkZXJzZWhlblwiXHJcbl07XHJcblxyXG5mdW5jdGlvbiBkb2N1bWVudFJlYWR5KGZuOiAoKSA9PiB2b2lkKSB7XHJcbiAgaWYgKFxyXG4gICAgZG9jdW1lbnQucmVhZHlTdGF0ZSA9PT0gXCJjb21wbGV0ZVwiIHx8XHJcbiAgICBkb2N1bWVudC5yZWFkeVN0YXRlID09PSBcImludGVyYWN0aXZlXCJcclxuICApIHtcclxuICAgIHNldFRpbWVvdXQoZm4sIDEpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCBmbik7XHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiByYW5kb20obWluOiBudW1iZXIsIG1heDogbnVtYmVyKSB7XHJcbiAgcmV0dXJuIE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluKSArIG1pbjtcclxufVxyXG5cclxuZnVuY3Rpb24gcmFuZG9tSW50KG1pbjogbnVtYmVyLCBtYXg6IG51bWJlcikge1xyXG4gIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluICsgMSkgKyBtaW4pO1xyXG59XHJcblxyXG5kZWNsYXJlIHZhciBIb3dsOiBhbnk7XHJcblxyXG5mdW5jdGlvbiBub2lzZShzZWxlY3Rvcjogc3RyaW5nLCBmaWxlOiBzdHJpbmcpIHtcclxuICBsZXQgY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7XHJcbiAgaWYgKCFjb250YWluZXIpIHJldHVybjtcclxuICBjb25zdCBzb3VuZCA9IG5ldyBIb3dsKHtcclxuICAgIHNyYzogW1wiaHR0cHM6Ly9tZWRpYS56b3R0ZWxpZy5jaC9jbG93bi9hdWRpby9cIiArIGZpbGVdLFxyXG4gICAgcHJlbG9hZDogZmFsc2UsXHJcbiAgICBodG1sNTogdHJ1ZVxyXG4gIH0pO1xyXG4gIGNvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24oKSB7XHJcbiAgICBzb3VuZC5wbGF5KCk7XHJcbiAgfSk7XHJcbn1cclxuZnVuY3Rpb24gbm9pc2VzKHNlbGVjdG9yOiBzdHJpbmcsIGZpbGVzOiBhbnlbXSkge1xyXG4gIGxldCBjb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKTtcclxuICBpZiAoIWNvbnRhaW5lcikgcmV0dXJuO1xyXG5cclxuICBmb3IgKGNvbnN0IGZpbGUgb2YgZmlsZXMpIHtcclxuICAgIGNvbnN0IHNvdW5kID0gbmV3IEhvd2woe1xyXG4gICAgICBzcmM6IFtcImh0dHBzOi8vbWVkaWEuem90dGVsaWcuY2gvY2xvd24vYXVkaW8vXCIgKyBmaWxlLm5hbWVdLFxyXG4gICAgICBwcmVsb2FkOiBmYWxzZSxcclxuICAgICAgaHRtbDU6IHRydWUsXHJcbiAgICAgIHZvbHVtZTogZmlsZS52b2x1bWUsXHJcbiAgICAgIGxvb3A6ICFmaWxlLnJhbmRvbSxcclxuICAgICAgc3RlcmVvOiB0eXBlb2YgZmlsZS5wYW4gPT09IFwibnVtYmVyXCIgPyBmaWxlLnBhbiA6IHVuZGVmaW5lZCxcclxuICAgICAgb25lbmQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIGlmIChmaWxlLnJhbmRvbSkge1xyXG4gICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgaWYgKCFydW5uaW5nKSByZXR1cm47XHJcblxyXG4gICAgICAgICAgICBpZiAoZmlsZS5wYW4gPT09IFwicmFuZG9tXCIpIGZpbGUuc291bmQuc3RlcmVvKHJhbmRvbSgtMSwgMSkpO1xyXG4gICAgICAgICAgICBmaWxlLnNvdW5kLnBsYXkoKTtcclxuICAgICAgICAgIH0sIGZpbGUucmFuZG9tICogMTAwMCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICBmaWxlLnNvdW5kID0gc291bmQ7XHJcbiAgfVxyXG5cclxuICBsZXQgcnVubmluZyA9IGZhbHNlO1xyXG4gIGNvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24oKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICBpZiAocnVubmluZykge1xyXG4gICAgICAgIHJ1bm5pbmcgPSBmYWxzZTtcclxuXHJcbiAgICAgICAgZm9yIChjb25zdCBmaWxlIG9mIGZpbGVzKSB7XHJcbiAgICAgICAgICBmaWxlLnNvdW5kLnN0b3AoKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcnVubmluZyA9IHRydWU7XHJcblxyXG4gICAgICAgIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykge1xyXG4gICAgICAgICAgaWYgKCFmaWxlLnJhbmRvbSkgZmlsZS5zb3VuZC5wbGF5KCk7XHJcbiAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICBpZiAoIXJ1bm5pbmcpIHJldHVybjtcclxuXHJcbiAgICAgICAgICAgICAgaWYgKGZpbGUucGFuID09PSBcInJhbmRvbVwiKSBmaWxlLnNvdW5kLnN0ZXJlbyhyYW5kb20oLTEsIDEpKTtcclxuICAgICAgICAgICAgICBmaWxlLnNvdW5kLnBsYXkoKTtcclxuICAgICAgICAgICAgfSwgZmlsZS5yYW5kb20gKiAxMDAwKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgYWxlcnQoZSk7XHJcbiAgICB9XHJcbiAgfSk7XHJcbn1cclxuZnVuY3Rpb24gaW5zcGlyYXRpb24oc2VsZWN0b3I6IHN0cmluZywgbGlzdDogc3RyaW5nIHwgYW55W10pIHtcclxuICBsZXQgY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7XHJcbiAgaWYgKCFjb250YWluZXIpIHJldHVybjtcclxuICBjb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uKCkge1xyXG4gICAgaWYgKCFjb250YWluZXIpIHJldHVybjtcclxuICAgIGNvbnN0IHRleHQgPSBjb250YWluZXIucXVlcnlTZWxlY3RvcihcIi50ZXh0XCIpO1xyXG4gICAgaWYgKCF0ZXh0KSByZXR1cm47XHJcbiAgICB0ZXh0LnRleHRDb250ZW50ID0gbGlzdFtyYW5kb21JbnQoMCwgbGlzdC5sZW5ndGggLSAxKV07XHJcbiAgfSk7XHJcbn1cclxuXHJcbmRvY3VtZW50UmVhZHkoZnVuY3Rpb24oKSB7XHJcbiAgbm9pc2UoXCIuY2xvd25cIiwgXCJub3NlLm1wM1wiKTtcclxuXHJcbiAgbm9pc2UoXCIuc2VydmljZS1iZWxsXCIsIFwic2VydmljZS1iZWxsLm1wM1wiKTtcclxuICBub2lzZXMoXCIuY2l0eVwiLCBjaXR5KTtcclxuICBub2lzZXMoXCIuZm9yZXN0XCIsIGZvcmVzdCk7XHJcblxyXG4gIGluc3BpcmF0aW9uKFwiLmJlcnVmXCIsIGJlcnVmKTtcclxuICBpbnNwaXJhdGlvbihcIi5ob2JieVwiLCBob2JieSk7XHJcbiAgaW5zcGlyYXRpb24oXCIudGlja1wiLCB0aWNrKTtcclxuICBpbnNwaXJhdGlvbihcIi5nZWZ1ZWhsXCIsIGdlZnVlaGwpO1xyXG4gIGluc3BpcmF0aW9uKFwiLmdlZnVlaGwtYW5nZW5laG1cIiwgZ2VmdWVobEFuZ2VuZWhtKTtcclxuICBpbnNwaXJhdGlvbihcIi5rb2VycGVydGVpbFwiLCBrb2VycGVydGVpbCk7XHJcbiAgaW5zcGlyYXRpb24oXCIudGllclwiLCB0aWVyKTtcclxuICBpbnNwaXJhdGlvbihcIi5mYWJlbHdlc2VuXCIsIGZhYmVsd2VzZW4pO1xyXG4gIGluc3BpcmF0aW9uKFwiLnBob2JpZVwiLCBwaG9iaWUpO1xyXG4gIGluc3BpcmF0aW9uKFwiLm9ydFwiLCBvcnQpO1xyXG4gIGluc3BpcmF0aW9uKFwiLmdlYmFldWRlXCIsIGdlYmFldWRlKTtcclxuICBpbnNwaXJhdGlvbihcIi5sYW5kXCIsIGxhbmQpO1xyXG4gIGluc3BpcmF0aW9uKFwiLnJhdW1cIiwgcmF1bSk7XHJcbiAgaW5zcGlyYXRpb24oXCIuZm9ydGJld2VndW5nc21pdHRlbFwiLCBmb3J0YmV3ZWd1bmdzbWl0dGVsKTtcclxuICBpbnNwaXJhdGlvbihcIi5yb3V0aW5lXCIsIHJvdXRpbmUpO1xyXG4gIGluc3BpcmF0aW9uKFwiLmdlbnJlLWZlcm5zZWhcIiwgZ2VucmVGZXJuc2VoKTtcclxuICBpbnNwaXJhdGlvbihcIi5nZW5yZS1tdXNpa1wiLCBnZW5yZU11c2lrKTtcclxuICBpbnNwaXJhdGlvbihcIi5iZXppZWh1bmdcIiwgYmV6aWVodW5nKTtcclxufSk7XHJcblxyXG5sZXQgY2l0eSA9IFtcclxuICB7IG5hbWU6IFwiY2l0eS9jYXItZHJpdmUtYnkubXAzXCIsIHZvbHVtZTogMS4wLCBwYW46IC0wLjYsIHJhbmRvbTogNSB9LFxyXG4gIHsgbmFtZTogXCJjaXR5L2Nhci1ob3JuLTIubXAzXCIsIHZvbHVtZTogMS4wLCBwYW46IC0wLjMsIHJhbmRvbTogNjAwIH0sXHJcbiAge1xyXG4gICAgbmFtZTogXCJjaXR5L2Zvb3RzdGVwcy1vbi1jb25jcmV0ZS5tcDNcIixcclxuICAgIHZvbHVtZTogMC45LFxyXG4gICAgcGFuOiAtMC4xLFxyXG4gICAgcmFuZG9tOiAxMjBcclxuICB9LFxyXG4gIHsgbmFtZTogXCJjaXR5L25ld3NwYXBlci5tcDNcIiwgdm9sdW1lOiAwLjYsIHBhbjogMC4yLCByYW5kb206IDEyMCB9LFxyXG4gIHsgbmFtZTogXCJjaXR5L3F1aWV0LWJhci5tcDNcIiwgdm9sdW1lOiAwLjQsIHBhbjogMC4zIH0sXHJcbiAge1xyXG4gICAgbmFtZTogXCJjaXR5L3Jlc2lkZW50aWFsLXRyYWZmaWMubXAzXCIsXHJcbiAgICB2b2x1bWU6IDAuNyxcclxuICAgIHBhbjogLTAuMSxcclxuICAgIGNyb3NzZmFkZTogMy4wXHJcbiAgfSxcclxuICB7IG5hbWU6IFwiY2l0eS92ZXNwYS1wYXNzaW5nLm1wM1wiLCB2b2x1bWU6IDAuOSwgcGFuOiAtMC4yLCByYW5kb206IDMwMCB9XHJcbl07XHJcblxyXG5sZXQgZm9yZXN0ID0gW1xyXG4gIHtcclxuICAgIG5hbWU6IFwiZm9yZXN0L2Nyb3ctdGhyZWUtdGltZXMubXAzXCIsXHJcbiAgICB2b2x1bWU6IDAuOCxcclxuICAgIHBhbjogXCJyYW5kb21cIixcclxuICAgIHJhbmRvbTogOTAwXHJcbiAgfSxcclxuICB7IG5hbWU6IFwiZm9yZXN0L2N1Y2tvby5tcDNcIiwgdm9sdW1lOiAwLjgsIHBhbjogXCJyYW5kb21cIiwgcmFuZG9tOiA5MDAgfSxcclxuICB7IG5hbWU6IFwiZm9yZXN0L2Rpc3RhbnQtZm9yZXN0LWFtYmllbmNlLm1wM1wiLCB2b2x1bWU6IDAuNyB9LFxyXG4gIHtcclxuICAgIG5hbWU6IFwiZm9yZXN0L2dyYXktd29vZHBlY2tlci5tcDNcIixcclxuICAgIHZvbHVtZTogMC44LFxyXG4gICAgcGFuOiBcInJhbmRvbVwiLFxyXG4gICAgcmFuZG9tOiAxODAwXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcImZvcmVzdC9sZWF2ZXMtcnVzdGxpbmcubXAzXCIsXHJcbiAgICB2b2x1bWU6IDAuNSxcclxuICAgIHBhbjogMC4zLFxyXG4gICAgcmFuZG9tOiAxNTBcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6IFwiZm9yZXN0L25pZ2h0ZW5nYWxlLWNhbGwubXAzXCIsXHJcbiAgICB2b2x1bWU6IDAuOCxcclxuICAgIHBhbjogXCJyYW5kb21cIixcclxuICAgIHJhbmRvbTogMzAwXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcImZvcmVzdC9uaWdodGVuZ2FsZS1zb25nMS5tcDNcIixcclxuICAgIHZvbHVtZTogMC44LFxyXG4gICAgcGFuOiBcInJhbmRvbVwiLFxyXG4gICAgcmFuZG9tOiA0NTBcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6IFwiZm9yZXN0L3doaXRlLXRocm9hdGVkLXNwYXJyb3cubXAzXCIsXHJcbiAgICB2b2x1bWU6IDAuOCxcclxuICAgIHBhbjogXCJyYW5kb21cIixcclxuICAgIHJhbmRvbTogMTgwMFxyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogXCJmb3Jlc3Qvd2luZC1ibG93LWluLXRoZS10cmVlcy5tcDNcIixcclxuICAgIHZvbHVtZTogMC41LFxyXG4gICAgcGFuOiAtMC4yLFxyXG4gICAgcmFuZG9tOiA3NVxyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogXCJmb3Jlc3Qvd2luZC1ibG93cy1pbi1sZWF2ZXMubXAzXCIsXHJcbiAgICB2b2x1bWU6IDAuNSxcclxuICAgIHBhbjogMC41LFxyXG4gICAgcmFuZG9tOiA2MFxyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogXCJmb3Jlc3Qvd29vZHBlY2tlci1hZHVsdC5tcDNcIixcclxuICAgIHZvbHVtZTogMC44LFxyXG4gICAgcGFuOiBcInJhbmRvbVwiLFxyXG4gICAgcmFuZG9tOiAxODAwXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcImZvcmVzdC93b29kcGVja2VyLXlvdW5nLm1wM1wiLFxyXG4gICAgdm9sdW1lOiAwLjgsXHJcbiAgICBwYW46IFwicmFuZG9tXCIsXHJcbiAgICByYW5kb206IDQ1MFxyXG4gIH1cclxuXTtcclxuZGVjbGFyZSB2YXIgJDogYW55O1xyXG4kKFwiLm1lbnUgLml0ZW1cIikudGFiKCk7XHJcblxyXG4kKFwiLnVpLnNsaWRlclwiKS5zbGlkZXIoe1xyXG4gIG1pbjogMCxcclxuICBtYXg6IDEwMCxcclxuICBzdGVwOiAxXHJcbn0pO1xyXG4iXSwic291cmNlUm9vdCI6IiJ9